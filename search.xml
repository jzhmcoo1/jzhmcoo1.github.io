<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>4o8-数据结构-绪论</title>
      <link href="/2020/07/07/4o8-DataStructure-xulun/"/>
      <url>/2020/07/07/4o8-DataStructure-xulun/</url>
      
        <content type="html"><![CDATA[<h1 id="绪论知识框架"><a href="#绪论知识框架" class="headerlink" title="绪论知识框架"></a>绪论知识框架</h1><p><img src= "/img/loading.gif" data-src="https://gitee.com/jzhmcoo1/jzhmcoo1picrepo/raw/master/img/ds_xulun.png" alt="绪论知识框架图"></p><h1 id="数据结构的基本概念"><a href="#数据结构的基本概念" class="headerlink" title="数据结构的基本概念"></a>数据结构的基本概念</h1><h2 id="基本概念和术语"><a href="#基本概念和术语" class="headerlink" title="基本概念和术语"></a>基本概念和术语</h2><ol><li><p>数据</p><blockquote><p>数据是对客观事物的符号表示，在计算机科学中是指所有能够输入到计算机中，并被计算机程序所处理的符号的总称。</p></blockquote></li><li><p>数据元素</p><blockquote><p>是数据的基本单位，计算机程序中通常考虑成一个整体进行处理。</p><p>通常若干个数据项组成一个数据元素。</p><p>数据项是数据的不可分割的最小单位。</p></blockquote></li><li><p>数据对象</p><blockquote><p>是性质相同的数据元素的集合，是数据的一个子集。</p></blockquote></li><li><p>数据结构</p><blockquote><p>是相互之间存在一种或多种特定关系的数据元素的集合</p></blockquote></li></ol><p>在任何问题中，数据元素都不是孤立存在的，他们之间存在的某种相互之间的关系称为结构</p><h2 id="数据（逻辑）结构"><a href="#数据（逻辑）结构" class="headerlink" title="数据（逻辑）结构"></a>数据（逻辑）结构</h2><ol><li><p>线性结构</p><p> 数据元素存在着 <strong>一对一关系</strong></p><p> 如：线性表、栈和队列、串、数组、广义表</p></li><li><p>非线性结构</p><ul><li><p>集合</p><p>  数据元素除了“同属于一个集合”的关系外，没有其他关系</p></li><li><p>树形结构</p><p>  数据元素存在着 <strong>一对多关系</strong></p></li><li><p>图状结构</p><p>  数据元素存在着 <strong>多对多关系</strong></p></li></ul></li></ol><p>数据结构的形式定义为：$DataStructure = (D,S)$</p><p>其中：D 为<strong>数据元素的有限集合</strong>，S 是 D 上<strong>关系的有限集合</strong>。</p><h2 id="存储结构"><a href="#存储结构" class="headerlink" title="存储结构"></a>存储结构</h2><blockquote><p>数据结构在计算机中的表示，称为物理结构，又称存储结构。它包括<strong>数据元素的表示</strong>和<strong>关系的表示</strong>。</p></blockquote><ol><li><p>顺序存储结构</p><p> 特点：借助元素在存储器中的相对位置来表示数据元素之间的逻辑关系。</p></li><li><p>链式存储结构</p><p> 特点：借助指示元素存储地址的指针（pointer）来表示数据元素直接的逻辑关系。</p></li></ol><p>王道考研书将存储结构分为 4 类，多加了索引存储结构和散列存储结构，而教科书上只列出了两类，我个人认为原因可能是：这两类是由顺序存储和链式存储这两个基本的存储结构所拓展出来的，而基本的存储结构只有顺序和链式两类。</p><blockquote><p>任何一个算法的<strong>设计</strong>，取决于选定的<strong>数据（逻辑）结构</strong>；</p><p>任何一个算法的<strong>实现</strong>，依赖于采用的<strong>存储结构</strong>。</p></blockquote><h2 id="抽象数据类型"><a href="#抽象数据类型" class="headerlink" title="抽象数据类型"></a>抽象数据类型</h2><blockquote><p>抽象数据类型（Abstract Data Type，简称 ADT）是指<strong>一个数学模型</strong>以及定义在该模型上的<strong>一组操作</strong>。</p><p>ADT 的定义仅取决于它的逻辑特性，与在计算机内部如何表示和实现无关。</p></blockquote><p>和数据结构的形式定义相对应，抽象数据类型可以用以下三元组表示<br>$$<br>(D,S,P)<br>$$<br>其中，D 是数据对象，S 是 D 上的关系集，P 是对 D 的基本操作集。</p><p>表示为：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ADT 抽象数据类型名称&#123;</span><br><span class="line">数据对象 D:&lt;数据对象的定义&gt;</span><br><span class="line">数据关系 S:&lt;数据关系的定义&gt;</span><br><span class="line">基本操作 P:&lt;基本操作的定义&gt;</span><br><span class="line">&#125;ADT 抽象数据类型名称</span><br></pre></td></tr></table></figure><h1 id="算法和算法效率分析"><a href="#算法和算法效率分析" class="headerlink" title="算法和算法效率分析"></a>算法和算法效率分析</h1><h2 id="算法的定义"><a href="#算法的定义" class="headerlink" title="算法的定义"></a>算法的定义</h2><blockquote><p>算法（algorithm）是对特定问题求解步骤的一种描述，它是指令的有限序列，其中每一条指令表示一个或多个操作。</p></blockquote><h2 id="算法的五大特性"><a href="#算法的五大特性" class="headerlink" title="算法的五大特性"></a>算法的五大特性</h2><ol><li><p>有穷性</p><p> 一个算法必须在执行完有穷步后结束，每一步完成的时间也是有穷的。</p></li><li><p>确定性</p><p> 每一条指令必须无二义性，且相同的输入只能得到相同的输出。</p></li><li><p>可行性</p><p> 算法中描述的操作都是可以通过实现基本运算来执行有限次实现的。</p></li><li><p>输入</p><p> 一个算法有 0 个或多个输入，取自于某个特定的对象的集合。</p></li><li><p>输出</p><p> 一个算法有 1 个或多个输出，同输入有着一定关系的量。</p></li></ol><h2 id="算法设计的要求"><a href="#算法设计的要求" class="headerlink" title="算法设计的要求"></a>算法设计的要求</h2><ol><li>正确性</li><li>可读性</li><li>健壮性</li><li>高效率和低存储量的需求</li></ol><h2 id="算法效率的度量"><a href="#算法效率的度量" class="headerlink" title="算法效率的度量"></a>算法效率的度量</h2><h3 id="时间复杂度"><a href="#时间复杂度" class="headerlink" title="时间复杂度"></a>时间复杂度</h3><p>算法的执行时间取决于很多因素，如：算法选取的策略，问题的规模，何种编程语言，机器的执行指令的速度等。</p><p>这表明：使用绝对的运行时间来评价算法的执行效率是不合适的。</p><p>通常的做法是：对于同一问题的不同算法，选取算法中 <strong>基本操作被重复执行的次数</strong> 来作为算法的时间量度。</p><p>记算法中基本操作被重复执行的次数为问题规模$n$的某个函数$f(n)$，则算法的时间量度为：<br>$$<br>T(n) = O(f(n))<br>$$<br>称为<strong>算法的时间复杂度</strong></p><h4 id="平均时间复杂度和最坏时间复杂度"><a href="#平均时间复杂度和最坏时间复杂度" class="headerlink" title="平均时间复杂度和最坏时间复杂度"></a>平均时间复杂度和最坏时间复杂度</h4><p>有些算法，比如冒泡排序，基本操作重复执行的次数还随着问题的输入数据集的不同而不同。</p><p>对于这类算法的分析，一种方法时计算平均时间复杂度，即考虑它所有可能的输入数据集的期望值；</p><p>另一种方法是计算最坏情况下的时间复杂度，即最坏情况下，估算算法执行时间的上界。</p><h3 id="空间复杂度"><a href="#空间复杂度" class="headerlink" title="空间复杂度"></a>空间复杂度</h3><p>类似于时间复杂度，空间复杂度（Space Complexity）记作：<br>$$<br>S(n) = O(f(n))<br>$$<br>其中，$n$为问题的规模。</p><p>包括了存储程序本身（指令、常量、变量、输入数据）的<strong>存储空间</strong>，和一些算法中用作实现计算的<strong>辅助变量空间</strong>。</p><blockquote><p> 若输入数据所占的空间只取决于问题本身，和算法无关，则只需要分析除输入数据和程序之外的额外空间，否则应同时考虑输入本身所需空间（和输入数据的表示形式有关）。</p></blockquote><h4 id="原地工作"><a href="#原地工作" class="headerlink" title="原地工作"></a>原地工作</h4><p>若额外空间相对于输入数据量来说是常数，则称次算法为 <strong>原地工作</strong>。</p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li>《王道数据结构考研复习指导》</li><li>《数据结构 （C 语言版）》严蔚敏</li></ul>]]></content>
      
      
      <categories>
          
          <category> StudyNotes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 408 </tag>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>4o8-概述</title>
      <link href="/2020/07/07/4o8/"/>
      <url>/2020/07/07/4o8/</url>
      
        <content type="html"><![CDATA[<h1 id="4o8-是什么？"><a href="#4o8-是什么？" class="headerlink" title="4o8 是什么？"></a>4o8 是什么？</h1><p>既然已经下定决心考研，不如早点开始做准备了，目前已是大二暑假，不能浪费这黄金时间，打算开始着手准备考研科目。4o8 是我为准备 408 考试而准备的项目，我将会在考研前将一些我认为的考试的重点和复习中解决的问题进行归纳整理，总结的不完整或者有问题的地方可以指出，总之，一起学习一起进步，共勉，peace。</p><h1 id="4o8-项目地址"><a href="#4o8-项目地址" class="headerlink" title="4o8 项目地址"></a>4o8 项目地址</h1><a class="btn-beautify button--animated blue larger" href="https://github.com/jzhmcoo1/4o8" target="_blank" rel="noopener" title="4o8">  <i class="far fa-hand-point-right fa-fw"></i> 4o8 </a><div class="note info">            <p>我会将对应科目的考点进行罗列，并进行讲解与分析，所谓最好的输入就是输出，希望我在掌握了以后，能够用我自己的语言表达出来。本来是想都放在 github 上的，但是 github 的 md 语法不支持数学公式，所以决定把理论部分都放到个人博客上来，github 作代码仓。</p><p>注：以下部分来自于 2020 年的考纲，打*的章节不在考纲范围，但往往有助于理解</p>          </div><hr><h1 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h1><h2 id="一、绪论"><a href="#一、绪论" class="headerlink" title="*一、绪论"></a><a href="/2020/07/07/4o8-DataStructure-xulun">*一、绪论</a></h2><h3 id="（一）数据结构的基本概念"><a href="#（一）数据结构的基本概念" class="headerlink" title="（一）数据结构的基本概念"></a>（一）<a href="/2020/07/07/4o8-DataStructure-xulun/#数据结构的基本概念">数据结构的基本概念</a></h3><ul><li>数据、数据元素、数据对象、数据类型、数据结构</li><li>数据结构三要素<ol><li>逻辑结构</li><li>存储结构</li><li>数据的运算</li></ol></li></ul><h3 id="（二）算法和算法效率的评价"><a href="#（二）算法和算法效率的评价" class="headerlink" title="（二）算法和算法效率的评价"></a>（二）<a href="/2020/07/07/4o8-DataStructure-xulun/#算法和算法效率分析">算法和算法效率的评价</a></h3><ul><li>算法定义</li><li>算法的五大特征<ul><li>有穷性</li><li>确定性</li><li>可行性</li><li>输入</li><li>输出</li></ul></li><li>效率的度量<ul><li>时间复杂度</li><li>空间复杂度</li></ul></li></ul><h2 id="二、线性表"><a href="#二、线性表" class="headerlink" title="二、线性表"></a>二、线性表</h2><h3 id="（一）线性表的定义和基本操作"><a href="#（一）线性表的定义和基本操作" class="headerlink" title="（一）线性表的定义和基本操作"></a>（一）线性表的定义和基本操作</h3><h3 id="（二）线性表的实现"><a href="#（二）线性表的实现" class="headerlink" title="（二）线性表的实现"></a>（二）线性表的实现</h3><ol><li>顺序存储</li><li>链式存储</li><li>线性表的应用</li></ol><h2 id="三、栈、队列和数组"><a href="#三、栈、队列和数组" class="headerlink" title="三、栈、队列和数组"></a>三、栈、队列和数组</h2><h3 id="（一）栈和队列的基本概念"><a href="#（一）栈和队列的基本概念" class="headerlink" title="（一）栈和队列的基本概念"></a>（一）栈和队列的基本概念</h3><h3 id="（二）栈和队列的顺序存储结构"><a href="#（二）栈和队列的顺序存储结构" class="headerlink" title="（二）栈和队列的顺序存储结构"></a>（二）栈和队列的顺序存储结构</h3><h3 id="（三）栈和队列的链式存储结构"><a href="#（三）栈和队列的链式存储结构" class="headerlink" title="（三）栈和队列的链式存储结构"></a>（三）栈和队列的链式存储结构</h3><h3 id="（四）栈和队列的应用"><a href="#（四）栈和队列的应用" class="headerlink" title="（四）栈和队列的应用"></a>（四）栈和队列的应用</h3><h3 id="（五）特殊矩阵的压缩存储"><a href="#（五）特殊矩阵的压缩存储" class="headerlink" title="（五）特殊矩阵的压缩存储"></a>（五）特殊矩阵的压缩存储</h3><h2 id="四、树与二叉树"><a href="#四、树与二叉树" class="headerlink" title="四、树与二叉树"></a>四、树与二叉树</h2><h3 id="（一）树的基本概念"><a href="#（一）树的基本概念" class="headerlink" title="（一）树的基本概念"></a>（一）树的基本概念</h3><h3 id="（二）二叉树"><a href="#（二）二叉树" class="headerlink" title="（二）二叉树"></a>（二）二叉树</h3><ol><li>二叉树的定义及其主要特征</li><li>二叉树的顺序存储结构和链式存储结构</li><li>二叉树的遍历</li><li>线索二叉树的基本概念和构造</li></ol><h3 id="（三）树、森林"><a href="#（三）树、森林" class="headerlink" title="（三）树、森林"></a>（三）树、森林</h3><ol><li>树的存储结构</li><li>森林与二叉树的转换</li><li>树和森林的遍历</li></ol><h3 id="（四）树与二叉树的应用"><a href="#（四）树与二叉树的应用" class="headerlink" title="（四）树与二叉树的应用"></a>（四）树与二叉树的应用</h3><ol><li>二叉排序树</li><li>平衡二叉树</li><li>哈夫曼（Huffman）树和哈夫曼编码</li></ol><h2 id="五、图"><a href="#五、图" class="headerlink" title="五、图"></a>五、图</h2><h3 id="（一）图的基本概念"><a href="#（一）图的基本概念" class="headerlink" title="（一）图的基本概念"></a>（一）图的基本概念</h3><h3 id="（二）图的存储及基本操作"><a href="#（二）图的存储及基本操作" class="headerlink" title="（二）图的存储及基本操作"></a>（二）图的存储及基本操作</h3><ol><li>邻接矩阵法</li><li>邻接表法</li><li>邻接多重表、十字链表</li></ol><h3 id="（三）图的遍历"><a href="#（三）图的遍历" class="headerlink" title="（三）图的遍历"></a>（三）图的遍历</h3><ol><li>深度优先搜索</li><li>广度优先搜索</li></ol><h3 id="（四）图的基本应用"><a href="#（四）图的基本应用" class="headerlink" title="（四）图的基本应用"></a>（四）图的基本应用</h3><ol><li>最小生成树</li><li>最短路径</li><li>拓扑排序</li><li>关键路径</li></ol><h2 id="六、查找"><a href="#六、查找" class="headerlink" title="六、查找"></a>六、查找</h2><h3 id="（一）查找的基本概念"><a href="#（一）查找的基本概念" class="headerlink" title="（一）查找的基本概念"></a>（一）查找的基本概念</h3><h3 id="（二）顺序查找法"><a href="#（二）顺序查找法" class="headerlink" title="（二）顺序查找法"></a>（二）顺序查找法</h3><h3 id="（三）分块查找法"><a href="#（三）分块查找法" class="headerlink" title="（三）分块查找法"></a>（三）分块查找法</h3><h3 id="（四）拆半查找法"><a href="#（四）拆半查找法" class="headerlink" title="（四）拆半查找法"></a>（四）拆半查找法</h3><h3 id="（五）B-树及其基本操作、B-树的基本概念"><a href="#（五）B-树及其基本操作、B-树的基本概念" class="headerlink" title="（五）B 树及其基本操作、B+树的基本概念"></a>（五）B 树及其基本操作、B+树的基本概念</h3><h3 id="（六）散列（Hash）表"><a href="#（六）散列（Hash）表" class="headerlink" title="（六）散列（Hash）表"></a>（六）散列（Hash）表</h3><h3 id="（七）字符串模式匹配"><a href="#（七）字符串模式匹配" class="headerlink" title="（七）字符串模式匹配"></a>（七）字符串模式匹配</h3><h3 id="（八）查找算法的分析及其应用"><a href="#（八）查找算法的分析及其应用" class="headerlink" title="（八）查找算法的分析及其应用"></a>（八）查找算法的分析及其应用</h3><h2 id="七、排序"><a href="#七、排序" class="headerlink" title="七、排序"></a>七、排序</h2><h3 id="（一）排序的基本概念"><a href="#（一）排序的基本概念" class="headerlink" title="（一）排序的基本概念"></a>（一）排序的基本概念</h3><h3 id="（二）插入排序"><a href="#（二）插入排序" class="headerlink" title="（二）插入排序"></a>（二）插入排序</h3><ol><li>直接插入排序</li><li>拆半插入排序</li></ol><h3 id="（三）起泡排序（BubbleSort）"><a href="#（三）起泡排序（BubbleSort）" class="headerlink" title="（三）起泡排序（BubbleSort）"></a>（三）起泡排序（BubbleSort）</h3><h3 id="（四）简单选择排序"><a href="#（四）简单选择排序" class="headerlink" title="（四）简单选择排序"></a>（四）简单选择排序</h3><h3 id="（五）希尔排序（ShellSort）"><a href="#（五）希尔排序（ShellSort）" class="headerlink" title="（五）希尔排序（ShellSort）"></a>（五）希尔排序（ShellSort）</h3><h3 id="（六）快速排序"><a href="#（六）快速排序" class="headerlink" title="（六）快速排序"></a>（六）快速排序</h3><h3 id="（七）堆排序"><a href="#（七）堆排序" class="headerlink" title="（七）堆排序"></a>（七）堆排序</h3><h3 id="（八）二路归并排序（MergeSort）"><a href="#（八）二路归并排序（MergeSort）" class="headerlink" title="（八）二路归并排序（MergeSort）"></a>（八）二路归并排序（MergeSort）</h3><h3 id="（九）基数排序"><a href="#（九）基数排序" class="headerlink" title="（九）基数排序"></a>（九）基数排序</h3><h3 id="（十）外部排序"><a href="#（十）外部排序" class="headerlink" title="（十）外部排序"></a>（十）外部排序</h3><h3 id="（十一）各种排序算法的比较"><a href="#（十一）各种排序算法的比较" class="headerlink" title="（十一）各种排序算法的比较"></a>（十一）各种排序算法的比较</h3><h3 id="（十二）排序算法的应用"><a href="#（十二）排序算法的应用" class="headerlink" title="（十二）排序算法的应用"></a>（十二）排序算法的应用</h3><hr><h1 id="计算机组成原理"><a href="#计算机组成原理" class="headerlink" title="计算机组成原理"></a>计算机组成原理</h1><h2 id="一、计算机系统概述"><a href="#一、计算机系统概述" class="headerlink" title="一、计算机系统概述"></a>一、计算机系统概述</h2><h3 id="（一）计算机发展历程"><a href="#（一）计算机发展历程" class="headerlink" title="（一）计算机发展历程"></a>（一）计算机发展历程</h3><h3 id="（二）计算机系统层次结构"><a href="#（二）计算机系统层次结构" class="headerlink" title="（二）计算机系统层次结构"></a>（二）计算机系统层次结构</h3><ol><li>计算机系统的基本组成</li><li>计算机硬件的基本组成</li><li>计算机软件和硬件的关系</li><li>计算机系统的工作过程</li></ol><h3 id="（三）计算机性能指标"><a href="#（三）计算机性能指标" class="headerlink" title="（三）计算机性能指标"></a>（三）计算机性能指标</h3><p>吞吐量、响应时间，CPU 时钟周期、主频、CPI、CPU 执行时间，MIPS、MFLOPS、GFLOPS、TFLOPS、PFLOPS。</p><h2 id="二、数据的表示和运算"><a href="#二、数据的表示和运算" class="headerlink" title="二、数据的表示和运算"></a>二、数据的表示和运算</h2><h3 id="（一）数制与编码"><a href="#（一）数制与编码" class="headerlink" title="（一）数制与编码"></a>（一）数制与编码</h3><ol><li>进位计数制及其相互转换</li><li>真值和机器数</li><li>BCD 码</li><li>字符与字符串</li><li>校验码</li></ol><h3 id="（二）定点数的表示和运算"><a href="#（二）定点数的表示和运算" class="headerlink" title="（二）定点数的表示和运算"></a>（二）定点数的表示和运算</h3><ol><li><p>定点数的表示</p><p> 无符号数的表示，带符号整数的表示</p></li><li><p>定点数的运算</p><p> 定点数的移位运算，原码定点数的加/减运算，补码定点数的加/减运算，定点数的乘/除运算，溢出的概念和判别方法。</p></li></ol><h3 id="（三）浮点数的表示和运算"><a href="#（三）浮点数的表示和运算" class="headerlink" title="（三）浮点数的表示和运算"></a>（三）浮点数的表示和运算</h3><ol><li><p>浮点数的表示</p><p> IEEE 754标准</p></li><li><p>浮点数的加/减运算</p></li></ol><h3 id="（四）算术逻辑单元-ALU"><a href="#（四）算术逻辑单元-ALU" class="headerlink" title="（四）算术逻辑单元 ALU"></a>（四）算术逻辑单元 ALU</h3><ol><li>串行加法器和并行加法器</li><li>算术逻辑单元 ALU 的功能和结构</li></ol><h2 id="三、存储器层次结构"><a href="#三、存储器层次结构" class="headerlink" title="三、存储器层次结构"></a>三、存储器层次结构</h2><h3 id="（一）存储器的分类"><a href="#（一）存储器的分类" class="headerlink" title="（一）存储器的分类"></a>（一）存储器的分类</h3><h3 id="（二）存储器的层次化结构"><a href="#（二）存储器的层次化结构" class="headerlink" title="（二）存储器的层次化结构"></a>（二）存储器的层次化结构</h3><h3 id="（三）半导体随机存储器"><a href="#（三）半导体随机存储器" class="headerlink" title="（三）半导体随机存储器"></a>（三）半导体随机存储器</h3><ol><li>SRAM 存储器</li><li>DRAM 存储器</li><li>只读存储器</li><li>Flash 存储器</li></ol><h3 id="（四）主存储器与-CPU-的连接"><a href="#（四）主存储器与-CPU-的连接" class="headerlink" title="（四）主存储器与 CPU 的连接"></a>（四）主存储器与 CPU 的连接</h3><h3 id="（五）双口-RAM-和多模块存储器"><a href="#（五）双口-RAM-和多模块存储器" class="headerlink" title="（五）双口 RAM 和多模块存储器"></a>（五）双口 RAM 和多模块存储器</h3><h3 id="（六）高速缓冲存储器（cache）"><a href="#（六）高速缓冲存储器（cache）" class="headerlink" title="（六）高速缓冲存储器（cache）"></a>（六）高速缓冲存储器（cache）</h3><ol><li>cache 的基本工作原理</li><li>cache 和主存之间的映射方式</li><li>cache 中主存块的替换算法</li><li>cache 写策略</li></ol><h3 id="（七）虚拟存储器"><a href="#（七）虚拟存储器" class="headerlink" title="（七）虚拟存储器"></a>（七）虚拟存储器</h3><ol><li>虚拟存储器的基本概念</li><li>页式虚拟存储器</li><li>段式讯存储器</li><li>段页式虚拟存储器</li><li>TLB（快表）</li></ol><h2 id="四、指令系统"><a href="#四、指令系统" class="headerlink" title="四、指令系统"></a>四、指令系统</h2><h3 id="（一）指令格式"><a href="#（一）指令格式" class="headerlink" title="（一）指令格式"></a>（一）指令格式</h3><ol><li>指令的基本格式</li><li>定长操作码指令格式</li><li>扩展操作码指令格式</li></ol><h3 id="（二）指令的寻址方式"><a href="#（二）指令的寻址方式" class="headerlink" title="（二）指令的寻址方式"></a>（二）指令的寻址方式</h3><ol><li>有效地址的概念</li><li>数据寻址和指令寻址</li><li>常见寻址方式</li></ol><h3 id="（三）CISC-和-RISC-的基本概念"><a href="#（三）CISC-和-RISC-的基本概念" class="headerlink" title="（三）CISC 和 RISC 的基本概念"></a>（三）CISC 和 RISC 的基本概念</h3><h2 id="五、中央处理器（CPU）"><a href="#五、中央处理器（CPU）" class="headerlink" title="五、中央处理器（CPU）"></a>五、中央处理器（CPU）</h2><h3 id="（一）CPU-的功能和基本结构"><a href="#（一）CPU-的功能和基本结构" class="headerlink" title="（一）CPU 的功能和基本结构"></a>（一）CPU 的功能和基本结构</h3><h3 id="（二）指令执行过程"><a href="#（二）指令执行过程" class="headerlink" title="（二）指令执行过程"></a>（二）指令执行过程</h3><h3 id="（三）数据通路的功能和基本结构"><a href="#（三）数据通路的功能和基本结构" class="headerlink" title="（三）数据通路的功能和基本结构"></a>（三）数据通路的功能和基本结构</h3><h3 id="（四）控制器的功能和工作原理"><a href="#（四）控制器的功能和工作原理" class="headerlink" title="（四）控制器的功能和工作原理"></a>（四）控制器的功能和工作原理</h3><ol><li><p>硬布线控制器</p></li><li><p>微程序控制器</p><p> 微程序、微指令和微命令，微指令格式，微命令的编码方式，微地址的形成方式。</p></li></ol><h3 id="（五）指令流水线"><a href="#（五）指令流水线" class="headerlink" title="（五）指令流水线"></a>（五）指令流水线</h3><ol><li>指令流水线的基本概念</li><li>指令流水线的基本实现</li><li>超标量和动态流水线的基本概念</li></ol><h2 id="六、总线"><a href="#六、总线" class="headerlink" title="六、总线"></a>六、总线</h2><h3 id="（一）总线概述"><a href="#（一）总线概述" class="headerlink" title="（一）总线概述"></a>（一）总线概述</h3><ol><li>总线的基本概念</li><li>总线的分类</li><li>总线的组成及其性能指标</li></ol><h3 id="（二）总线仲裁"><a href="#（二）总线仲裁" class="headerlink" title="（二）总线仲裁"></a>（二）总线仲裁</h3><ol><li>集中仲裁方式</li><li>分布仲裁方式</li></ol><h3 id="（三）总线操作和定时"><a href="#（三）总线操作和定时" class="headerlink" title="（三）总线操作和定时"></a>（三）总线操作和定时</h3><ol><li>同步定时方式</li><li>异步定时方式</li></ol><h3 id="（四）总线标准"><a href="#（四）总线标准" class="headerlink" title="（四）总线标准"></a>（四）总线标准</h3><h2 id="七、输入输出（I-O）系统"><a href="#七、输入输出（I-O）系统" class="headerlink" title="七、输入输出（I/O）系统"></a>七、输入输出（I/O）系统</h2><h3 id="（一）I-O-系统基本概念"><a href="#（一）I-O-系统基本概念" class="headerlink" title="（一）I/O 系统基本概念"></a>（一）I/O 系统基本概念</h3><h3 id="（二）外部设备"><a href="#（二）外部设备" class="headerlink" title="（二）外部设备"></a>（二）外部设备</h3><ol><li>输入设备：键盘、鼠标</li><li>输出设备：显示器、打印机</li><li>外存储器：硬盘存储器、磁盘列阵、光盘存储器</li></ol><h3 id="（三）I-O-接口（I-O-控制器）"><a href="#（三）I-O-接口（I-O-控制器）" class="headerlink" title="（三）I/O 接口（I/O 控制器）"></a>（三）I/O 接口（I/O 控制器）</h3><ol><li>I/O 接口的功能和基本结构</li><li>I/O 端口及其编址</li></ol><h3 id="（四）I-O-方式"><a href="#（四）I-O-方式" class="headerlink" title="（四）I/O 方式"></a>（四）I/O 方式</h3><ol><li><p>程序查询方式</p></li><li><p>程序中断方式</p><p> 中断的基本概念，中断响应过程，中断处理过程，多重中断和中断屏蔽的概念。</p></li><li><p>DMA 方式</p><p> DMA 控制器的组成，DMA 传送过程</p></li></ol><hr><h1 id="操作系统"><a href="#操作系统" class="headerlink" title="操作系统"></a>操作系统</h1><h2 id="一、操作系统概述"><a href="#一、操作系统概述" class="headerlink" title="一、操作系统概述"></a>一、操作系统概述</h2><h3 id="（一）操作系统的概念、特征、功能和提供的服务"><a href="#（一）操作系统的概念、特征、功能和提供的服务" class="headerlink" title="（一）操作系统的概念、特征、功能和提供的服务"></a>（一）操作系统的概念、特征、功能和提供的服务</h3><h3 id="（二）操作系统的发展与分类"><a href="#（二）操作系统的发展与分类" class="headerlink" title="（二）操作系统的发展与分类"></a>（二）操作系统的发展与分类</h3><h3 id="（三）操作系统的运行环境"><a href="#（三）操作系统的运行环境" class="headerlink" title="（三）操作系统的运行环境"></a>（三）操作系统的运行环境</h3><ol><li>内核态和用户态</li><li>中断、异常</li><li>系统调用</li></ol><h3 id="（四）操作系统体系结构"><a href="#（四）操作系统体系结构" class="headerlink" title="（四）操作系统体系结构"></a>（四）操作系统体系结构</h3><h2 id="二、进程管理"><a href="#二、进程管理" class="headerlink" title="二、进程管理"></a>二、进程管理</h2><h3 id="（一）进程与线程"><a href="#（一）进程与线程" class="headerlink" title="（一）进程与线程"></a>（一）进程与线程</h3><ol><li><p>进程概念</p></li><li><p>进程的状态与转换</p></li><li><p>进程控制</p></li><li><p>进程组织</p></li><li><p>进程通信</p><p> 共享存储系统，消息传递系统，管道通信</p></li><li><p>线程概念与多线程模型</p></li></ol><h3 id="（二）处理机调度"><a href="#（二）处理机调度" class="headerlink" title="（二）处理机调度"></a>（二）处理机调度</h3><ol><li><p>调度的基本概念</p></li><li><p>调度时机、切换与过程</p></li><li><p>调度的基本准则</p></li><li><p>调度方式</p></li><li><p>典型调度算法</p><p> 先来先服务、短作业优先、时间片轮转、优先级调度、高响应比调度、多级反馈队列</p></li></ol><h3 id="（三）同步与互斥"><a href="#（三）同步与互斥" class="headerlink" title="（三）同步与互斥"></a>（三）同步与互斥</h3><ol><li><p>进程同步的基本概念</p></li><li><p>实现临界区互斥的基本方法</p><p> 软件实现、硬件实现</p></li><li><p>信号量</p></li><li><p>管程</p></li><li><p>经典同步问题</p><p> 生产者-消费者问题、读者-写者问题、哲学家进餐问题</p></li></ol><h3 id="（四）死锁"><a href="#（四）死锁" class="headerlink" title="（四）死锁"></a>（四）死锁</h3><ol><li><p>死锁概念</p></li><li><p>死锁处理策略</p></li><li><p>死锁预防</p></li><li><p>死锁避免</p><p> 系统安全状态，银行家算法</p></li><li><p>死锁检测和解除</p></li></ol><h2 id="三、内存管理"><a href="#三、内存管理" class="headerlink" title="三、内存管理"></a>三、内存管理</h2><h3 id="（一）内存管理基础"><a href="#（一）内存管理基础" class="headerlink" title="（一）内存管理基础"></a>（一）内存管理基础</h3><ol><li><p>内存管理概念</p><p> 程序装入与链接，逻辑地址与物理地址空间，内存保护</p></li><li><p>交换与覆盖</p></li><li><p>连续分配管理方式</p></li><li><p>非连续分配管理方式</p><p> 分页管理方式，分段管理方式，段页式管理方式</p></li></ol><h3 id="（二）虚拟内存管理"><a href="#（二）虚拟内存管理" class="headerlink" title="（二）虚拟内存管理"></a>（二）虚拟内存管理</h3><ol><li><p>虚拟内存基本概念</p></li><li><p>请求分页管理</p></li><li><p>页面置换算法</p><p> 最佳置换算法（OPT)、先进先出置换算法（FIFO）、最近最少使用置换算法（LRU）、时钟置换算法（Clock）</p></li><li><p>页面分配策略</p></li><li><p>工作集</p></li><li><p>抖动</p></li></ol><h2 id="四、文件管理"><a href="#四、文件管理" class="headerlink" title="四、文件管理"></a>四、文件管理</h2><h3 id="（一）文件系统基础"><a href="#（一）文件系统基础" class="headerlink" title="（一）文件系统基础"></a>（一）文件系统基础</h3><ol><li><p>文件概念</p></li><li><p>文件的逻辑结构</p><p> 顺序文件、索引文件、索引顺序文件</p></li><li><p>目录结构</p><p> 文件控制块和索引节点，单级目录结构和两级目录结构，树形目录结构，图形目录结构。</p></li><li><p>文件共享</p></li><li><p>文件保护</p><p> 访问类型，访问控制</p></li></ol><h3 id="（二）文件系统实现"><a href="#（二）文件系统实现" class="headerlink" title="（二）文件系统实现"></a>（二）文件系统实现</h3><ol><li>文件系统层次结构</li><li>目录实现</li><li>文件实现</li></ol><h3 id="（三）磁盘组织与管理"><a href="#（三）磁盘组织与管理" class="headerlink" title="（三）磁盘组织与管理"></a>（三）磁盘组织与管理</h3><ol><li>磁盘的结构</li><li>磁盘调度算法</li><li>磁盘的管理</li></ol><h2 id="五、输入输出（I-O）管理"><a href="#五、输入输出（I-O）管理" class="headerlink" title="五、输入输出（I/O）管理"></a>五、输入输出（I/O）管理</h2><h3 id="（一）I-O-管理概述"><a href="#（一）I-O-管理概述" class="headerlink" title="（一）I/O 管理概述"></a>（一）I/O 管理概述</h3><ol><li>I/O 控制方式</li><li>I/O 软件层次结构</li></ol><h3 id="（二）I-O-核心子系统"><a href="#（二）I-O-核心子系统" class="headerlink" title="（二）I/O 核心子系统"></a>（二）I/O 核心子系统</h3><ol><li>I/O 调度概念</li><li>高速缓存与缓冲区</li><li>设备分配与回收</li><li>假脱机技术（SPOOLing）</li></ol><hr><h1 id="计算机网络"><a href="#计算机网络" class="headerlink" title="计算机网络"></a>计算机网络</h1><h2 id="一、计算机网络体系结构"><a href="#一、计算机网络体系结构" class="headerlink" title="一、计算机网络体系结构"></a>一、计算机网络体系结构</h2><h3 id="（一）计算机网络概述"><a href="#（一）计算机网络概述" class="headerlink" title="（一）计算机网络概述"></a>（一）计算机网络概述</h3><ol><li>计算机网络的概念、组成与功能</li><li>计算机网络的分类</li><li>计算机网络的标准化工作及相关组织</li></ol><h3 id="（二）计算机网络体系结构与参考模型"><a href="#（二）计算机网络体系结构与参考模型" class="headerlink" title="（二）计算机网络体系结构与参考模型"></a>（二）计算机网络体系结构与参考模型</h3><ol><li>计算机网络分层结构</li><li>计算机网络协议、接口、服务等概念</li><li>ISO/OSI参考模型和 TCP/IP 模型</li></ol><h2 id="二、物理层"><a href="#二、物理层" class="headerlink" title="二、物理层"></a>二、物理层</h2><h3 id="（一）通信基础"><a href="#（一）通信基础" class="headerlink" title="（一）通信基础"></a>（一）通信基础</h3><ol><li>信道、信号、带宽、码元、波特、速率与信宿等基本元素</li><li>奈奎斯特定理与香浓定理</li><li>编码与调制</li><li>电路交换、报文交换与分组交换</li><li>数据报与虚电路</li></ol><h3 id="（二）传输介质"><a href="#（二）传输介质" class="headerlink" title="（二）传输介质"></a>（二）传输介质</h3><ol><li>双绞线、同轴电缆、光纤与无线传输介质</li><li>物理层接口的特性</li></ol><h3 id="（三）物理层设备"><a href="#（三）物理层设备" class="headerlink" title="（三）物理层设备"></a>（三）物理层设备</h3><ol><li>中继器</li><li>集线器</li></ol><h2 id="三、数据链路层"><a href="#三、数据链路层" class="headerlink" title="三、数据链路层"></a>三、数据链路层</h2><h3 id="（一-）数据链路层的功能"><a href="#（一-）数据链路层的功能" class="headerlink" title="（一 ）数据链路层的功能"></a>（一 ）数据链路层的功能</h3><h3 id="（二）组帧"><a href="#（二）组帧" class="headerlink" title="（二）组帧"></a>（二）组帧</h3><h3 id="（三）差错控制"><a href="#（三）差错控制" class="headerlink" title="（三）差错控制"></a>（三）差错控制</h3><ol><li>验错编码</li><li>纠错编码</li></ol><h3 id="（四）流量控制与可靠传输机制"><a href="#（四）流量控制与可靠传输机制" class="headerlink" title="（四）流量控制与可靠传输机制"></a>（四）流量控制与可靠传输机制</h3><ol><li>流量控制、可靠传输与滑动窗口机制</li><li>停止-等待协议</li><li>后退 N 帧协议（GBN）</li><li>选择重传协议（SR)</li></ol><h3 id="（五）介质访问控制"><a href="#（五）介质访问控制" class="headerlink" title="（五）介质访问控制"></a>（五）介质访问控制</h3><ol><li><p>信道划分</p><p> 频分多路复用、时分多路分用、波分多路复用、码分多路复用的概念和基本原理。</p></li><li><p>随机访问</p><p> ALOHA 协议，CSMA 协议，CSMA/CD 协议，CSMA/CA协议</p></li><li><p>轮询访问</p><p> 令牌传递协议</p></li></ol><h3 id="（六）局域网"><a href="#（六）局域网" class="headerlink" title="（六）局域网"></a>（六）局域网</h3><ol><li>局域网的基本概念与体系结构</li><li>以太网与 IEEE 802.3</li><li>IEEE 802.11</li><li>令牌环网的基本原理</li></ol><h3 id="（七）广域网"><a href="#（七）广域网" class="headerlink" title="（七）广域网"></a>（七）广域网</h3><ol><li>广域网的基本概念</li><li>PPP 协议</li><li>HDLC 协议</li></ol><h3 id="（八）数据链路层设备"><a href="#（八）数据链路层设备" class="headerlink" title="（八）数据链路层设备"></a>（八）数据链路层设备</h3><ol><li>网桥的概念及其基本原理</li><li>局域网交换机及其工作原理</li></ol><h2 id="四、网络层"><a href="#四、网络层" class="headerlink" title="四、网络层"></a>四、网络层</h2><h3 id="（一）网络层的功能"><a href="#（一）网络层的功能" class="headerlink" title="（一）网络层的功能"></a>（一）网络层的功能</h3><ol><li>异构网络互连</li><li>路由与转发</li><li>拥塞控制</li></ol><h3 id="（二）路由算法"><a href="#（二）路由算法" class="headerlink" title="（二）路由算法"></a>（二）路由算法</h3><ol><li>静态路由与动态路由</li><li>距离——向量路由算法</li><li>链路状态路由算法</li><li>层次路由</li></ol><h3 id="（三）IPv4"><a href="#（三）IPv4" class="headerlink" title="（三）IPv4"></a>（三）IPv4</h3><ol><li>IPv4 分组</li><li>IPv4 地址与 NAT</li><li>子网划分、路由聚集、子网掩码与 CIDR</li><li>ARP 协议、DHCP 协议、ICMP 协议</li></ol><h3 id="（四）IPv6"><a href="#（四）IPv6" class="headerlink" title="（四）IPv6"></a>（四）IPv6</h3><ol><li>IPv6 的主要特点</li><li>IPv6 地址</li></ol><h3 id="（五）路由协议"><a href="#（五）路由协议" class="headerlink" title="（五）路由协议"></a>（五）路由协议</h3><ol><li>自治系统</li><li>域内路由与域间路由</li><li>RIP 路由协议</li><li>OSPF 路由协议</li><li>BGP 路由协议</li></ol><h3 id="（六）IP-组播"><a href="#（六）IP-组播" class="headerlink" title="（六）IP 组播"></a>（六）IP 组播</h3><ol><li>组播的概念</li><li>IP 组播地址</li></ol><h3 id="（七）移动-IP"><a href="#（七）移动-IP" class="headerlink" title="（七）移动 IP"></a>（七）移动 IP</h3><ol><li>移动 IP 的概念</li><li>移动 IP 通信过程</li></ol><h3 id="（八）网络层设备"><a href="#（八）网络层设备" class="headerlink" title="（八）网络层设备"></a>（八）网络层设备</h3><ol><li>路由器的组成与功能</li><li>路由表与路由转发</li></ol><h2 id="五、传输层"><a href="#五、传输层" class="headerlink" title="五、传输层"></a>五、传输层</h2><h3 id="（一）传输层提供的服务"><a href="#（一）传输层提供的服务" class="headerlink" title="（一）传输层提供的服务"></a>（一）传输层提供的服务</h3><ol><li>传输层的功能</li><li>传输层寻址与端口</li><li>无连接服务与面向连接服务</li></ol><h3 id="（二）UDP-协议"><a href="#（二）UDP-协议" class="headerlink" title="（二）UDP 协议"></a>（二）UDP 协议</h3><ol><li>UDP 数据报</li><li>UDP 校验</li></ol><h3 id="（三）TCP-协议"><a href="#（三）TCP-协议" class="headerlink" title="（三）TCP 协议"></a>（三）TCP 协议</h3><ol><li>TCP 段</li><li>TCP 连接管理</li><li>TCP 可靠传输</li><li>TCP 流量控制与拥塞控制</li></ol><h2 id="六、应用层"><a href="#六、应用层" class="headerlink" title="六、应用层"></a>六、应用层</h2><h3 id="（一）网络应用模型"><a href="#（一）网络应用模型" class="headerlink" title="（一）网络应用模型"></a>（一）网络应用模型</h3><ol><li>客户/服务器模型</li><li>P2P 模型</li></ol><h3 id="（二）DNS-系统"><a href="#（二）DNS-系统" class="headerlink" title="（二）DNS 系统"></a>（二）DNS 系统</h3><ol><li>层次域名空间</li><li>域名服务器</li><li>域名解析过程</li></ol><h3 id="（三）FTP"><a href="#（三）FTP" class="headerlink" title="（三）FTP"></a>（三）FTP</h3><ol><li>FTP 协议的工作原理</li><li>控制连接与数据连接</li></ol><h3 id="（四）电子邮件"><a href="#（四）电子邮件" class="headerlink" title="（四）电子邮件"></a>（四）电子邮件</h3><ol><li>电子邮件系统的组织结构</li><li>电子邮件格式与 MIME</li><li>SMTP 协议与 POP3 协议</li></ol><h3 id="（五）WWW"><a href="#（五）WWW" class="headerlink" title="（五）WWW"></a>（五）WWW</h3><ol><li>WWW 的概念与组成结构</li><li>HTTP 协议</li></ol><hr><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><p>《2020年全国硕士研究生招生考试计算机科学与技术学科联考计算机学科专业基础综合考试大纲》</p></li><li><p>《数据结构 （C语言版）》 严蔚敏</p></li><li><p>《计算机组成原理（第 2 版）》唐朔飞</p></li><li><p>《计算机操作系统（第四版）》汤小丹</p></li><li><p>《计算机网络（第 7 版）》谢仁希</p></li><li><p>《数据结构考研复习指导》王道</p></li><li><p>《计算机组成原理考研复习指导》王道</p></li><li><p>《操作系统考研复习指导》王道</p></li><li><p>《计算机网络考研复习指导》王道</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> StudyNotes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 408 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux Learning IV (Linux Files and Directories Permissions)</title>
      <link href="/2020/07/06/Linux-files-directories-permissions/"/>
      <url>/2020/07/06/Linux-files-directories-permissions/</url>
      
        <content type="html"><![CDATA[<h1 id="用户与用户组"><a href="#用户与用户组" class="headerlink" title="用户与用户组"></a>用户与用户组</h1><blockquote><p> 在 Linux 中，任何一个文件都具有用户（User），所属群组（Group），以及其他人（Others）三种身份的个别权限。</p></blockquote><ol><li><p>文件拥有者</p><p> 由于 Linux 是一个多人多任务的系统，因此需要考虑每个人的隐私权和每个人喜好的工作环境，因此文件拥有者的角色就相当重要</p></li><li><p>用户组的概念</p><p> 用户组最有用的功能之一是在团队进行协作的时候。可以对一个文件进行简单的权限设置，就能限制非自己团队成员的其他人不能够阅读内容，但可以让自己用户组的成员修改我所建立的文件。</p><p> 同时，如果有我自己的私人隐秘文件，可以设置让自己用户组的成员也看不到我的文件。</p></li><li><p>其他人的概念</p><p> 与文件的拥有者和用户组没有关系的人，即没有被包含在用户组内的人。</p><p> 但 Linux 还有一个 root 用户，对任何文件都有权限</p></li></ol><h1 id="Linux-文件权限"><a href="#Linux-文件权限" class="headerlink" title="Linux 文件权限"></a>Linux 文件权限</h1><p>使用<code>ls -al</code>命令，可以列出当前目录的所有文件（包括隐藏文件）</p><p>例如在我的 CentOS 服务器上的 <code>/root</code>目录使用该命令</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ls -al</span><br></pre></td></tr></table></figure><p>输出为：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">total 136</span><br><span class="line">dr-xr-x---. 13 root  root   4096 Jun 24 22:41 .</span><br><span class="line">dr-xr-xr-x. 21 root  root   4096 Jul  6 12:02 ..</span><br><span class="line">-rw-------   1 root  root  23323 Jul  6 12:01 .bash_history</span><br><span class="line">-rw-r--r--.  1 root  root     18 Dec 29  2013 .bash_logout</span><br><span class="line">-rw-r--r--   1 root  root    250 Jun 18 17:11 .bash_profile</span><br><span class="line">-rw-r--r--.  1 root  root    176 Dec 29  2013 .bashrc</span><br><span class="line">drwxr-xr-x   3 root  root   4096 Mar  7  2019 .cache</span><br><span class="line">drwxr-xr-x   4 root  root   4096 Jun 18 17:11 .config</span><br><span class="line">-rw-r--r--.  1 root  root    100 Dec 29  2013 .cshrc</span><br><span class="line">-rw-r--r--   1 root  root   4833 May 16  2014 index.html</span><br><span class="line">drwxr-xr-x   3 root  root   4096 Jun 24 22:41 .java</span><br><span class="line">-rw-------   1 root  root     42 Nov  5  2019 .lesshst</span><br><span class="line">drwxr-xr-x   3 root  root   4096 Jun 24 17:47 .m2</span><br><span class="line">-rw-------   1 root  root   1544 Jun 24 22:38 .mysql_history</span><br><span class="line">drwxr-xr-x   6 root  root   4096 Jun 24 21:48 .npm</span><br><span class="line">drwxr-xr-x   2 root  root   4096 Jun 22 20:09 .oracle_jre_usage</span><br><span class="line">drwxr-xr-x   2 root  root   4096 Jun 18 14:51 .pip</span><br><span class="line">drwxr-----   3 root  root   4096 Jun 19 16:35 .pki</span><br><span class="line">-rw-r--r--   1 root  root     73 Jun 18 14:51 .pydistutils.cfg</span><br><span class="line">drwxr-xr-x  18 mysql mysql  4096 Jun 18 17:03 Python-3.8.3</span><br><span class="line">-rw-------   1 root  root     12 Jun 18 17:06 .python_history</span><br><span class="line">-rw-------   1 root  root     20 Jun 22 20:27 .rediscli_history</span><br><span class="line">drwx------   2 root  root   4096 Jun 18 15:13 .ssh</span><br><span class="line">-rw-r--r--.  1 root  root    129 Dec 29  2013 .tcshrc</span><br><span class="line">-rw-------   1 root  root   4774 Jun 22 20:41 .viminfo</span><br><span class="line">drwxr-xr-x   3 root  root   4096 Jun 24 22:23 workspace</span><br></pre></td></tr></table></figure><p>将上面所展示的信息可以使用如下表格展示</p><table><thead><tr><th align="center">内容</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center"><code>drwxr-xr-x</code></td><td align="center">文件类型权限</td></tr><tr><td align="center">3</td><td align="center">链接数</td></tr><tr><td align="center"><code>root</code></td><td align="center">文件拥有者</td></tr><tr><td align="center"><code>root</code></td><td align="center">文件用户组</td></tr><tr><td align="center">4096</td><td align="center">文件大小（默认以 Bytes 为单位）</td></tr><tr><td align="center">Jun 24 22:23</td><td align="center">文件最后修改时间</td></tr><tr><td align="center">workspace</td><td align="center">文件名</td></tr></tbody></table><h2 id="文件类型权限"><a href="#文件类型权限" class="headerlink" title="文件类型权限"></a>文件类型权限</h2><p>第一个字符表示文件到底是一个 <strong>目录、文件、链接文件等</strong></p><ul><li>是<code>d</code>表示目录</li><li>是<code>-</code>表示文件</li><li>是<code>l</code>表示链接文件（link file）</li><li>是<code>b</code>表示设备文件里的可供存储的外围设备</li><li>是<code>c</code>表示设备文件里的串行端口设备，如键盘、鼠标</li></ul><p>从第二个字符到第四个字符表示<strong>文件拥有者</strong>的权限，第五个字符到第七个字符表示<strong>文件所属用户组</strong>的权限，第八个到第十个字符表示<strong>其他人</strong>的权限，其中</p><ul><li><code>r</code>表示可读</li><li><code>w</code>表示可写</li><li><code>x</code>表示可执行</li><li><code>-</code>表示无权限</li><li>其中<code>rwx</code>的位置不会发生变化，如果没有当前权限就直接使用<code>-</code>表示无权限</li></ul><p>例如：<code>drwxr-xr-x</code>，表示这是一个<strong>目录</strong>，<strong>文件拥有者</strong>可以进行<code>读、写、执行</code>而<strong>所在用户组的其他用户和其他人</strong>只能<code>读、执行</code></p><h2 id="链接数"><a href="#链接数" class="headerlink" title="链接数"></a>链接数</h2><p>表示有多少文件名链接到此节点（inode)</p><blockquote><p>每一个文件都会与它的权限与属性记录到文件系统的<code>inode</code>中，不过，我们使用的目录树却是使用文件名来进行记录，因此每一个文件名就会链接到一个<code>inode</code>，这个属性记录的是有多少不同的文件名链接到相同的一个<code>inode</code>号码。</p></blockquote><h2 id="最后修改时间"><a href="#最后修改时间" class="headerlink" title="最后修改时间"></a>最后修改时间</h2><p>显示为<code>月 日</code>的形式，如果最后修改的时间距离现在太久，则时间部分只会显示年份而已，如使用<code>ls -l</code>：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-rw-r--r--  1 root  root  4833 May 16  2014 index.html</span><br><span class="line">drwxr-xr-x  3 root  root  4096 Jun 24 22:23 workspace</span><br></pre></td></tr></table></figure><h1 id="修改文件属性和权限"><a href="#修改文件属性和权限" class="headerlink" title="修改文件属性和权限"></a>修改文件属性和权限</h1><p>在<code>root</code>用户下使用：</p><ul><li><code>chgrp</code>修改文件所属用户组</li><li><code>chown</code>修改文件的拥有者</li><li><code>chmod</code>修改文件权限</li></ul><h2 id="使用chgrp"><a href="#使用chgrp" class="headerlink" title="使用chgrp"></a>使用<code>chgrp</code></h2><p><code>chgrp</code>为<code>change group</code>的缩写，使用</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">chgrp [-R] dirname/filename</span><br></pre></td></tr></table></figure><p>可选参数<code>-R</code>，表示递归（recursive）修改连同子目录下的所有文件、所有目录，都更新为这个用户组</p><p>注：用户组名必须在文件<code>/etc/group</code>文件中存在才行</p><h2 id="使用chown"><a href="#使用chown" class="headerlink" title="使用chown"></a>使用<code>chown</code></h2><p><code>chown</code>为<code>change owner</code>的缩写，使用</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">chown [-R] 账号名称 文件或目录</span><br><span class="line">chown [-R] 账号名称:用户组名称 文件或目录  <span class="comment"># 顺便一起修改了用户组名称</span></span><br></pre></td></tr></table></figure><p><code>-R</code>表示递归</p><p>注：用户必须在<code>/etc/passwd</code>文件中存在才行</p><h2 id="何时使用？"><a href="#何时使用？" class="headerlink" title="何时使用？"></a>何时使用？</h2><p>最常见的例子是在复制文件给别人使用的时候，由于复制命令<code>cp 源文件 目标文件</code>会直接复制执行者的属性和权限，所以这个时候就有必要进行文件拥有者和用户组的修改了。</p><h2 id="使用chmod"><a href="#使用chmod" class="headerlink" title="使用chmod"></a>使用<code>chmod</code></h2><p>此命令设置权限的方法有 2 种，分别是 <strong>符号式</strong> 和 <strong>数字式</strong></p><h3 id="数字式"><a href="#数字式" class="headerlink" title="数字式"></a>数字式</h3><p>我们可以使用数字来代表各个（读、写、执行）的权限，其中</p><ul><li><code>r</code>对应<code>4</code></li><li><code>w</code>对应<code>2</code></li><li><code>x</code>对应<code>1</code></li></ul><p>有一些像二进制数</p><p>对于一个文件类型权限如<code>-rwxrwx---</code>来说，第一位表示是一个文件，将后 9 位每三个分一组，分别表示文件拥有者，文件所属用户组，和其他人的权限，就得到了<code>rwx</code>,<code>rwx</code>和<code>---</code>，应用对应关系，可以得出第一位<code>r+w+x = 4+2+1 = 7</code>，同理第二位，第三位表示<code>0</code>，</p><p>所有最后修改的权限应该写为</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">chmod [-R] 770 文件或目录</span><br></pre></td></tr></table></figure><h3 id="符号式"><a href="#符号式" class="headerlink" title="符号式"></a>符号式</h3><p>三种身份分别使用<code>u</code>,<code>g</code>,<code>o</code>,<code>a</code>（<code>u</code>表示 user，<code>g</code>表示 group，<code>o</code>表示others <code>a</code>表示 all）</p><p>使用符号<code>+</code>表示添加权限，<code>-</code>表示去除权限，<code>=</code>表示直接设置权限</p><p>所以命令为</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">       u      +        r        </span><br><span class="line">chmod  g      -        w        文件或目录</span><br><span class="line">       o      =        x</span><br><span class="line">       a</span><br></pre></td></tr></table></figure><p>例如，想要修改一个文件权限为<code>-rwxr-xr-x</code></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">chmod u=rwx,go=rx 文件名 <span class="comment"># 其中u=rwx,go=rx中间无任何空格</span></span><br></pre></td></tr></table></figure><p>注：使用<code>+</code>,<code>-</code>时，如果没有指定到当前权限，则会保持不变，比如文件权限为<code>rwx</code>，使用<code>chmod -x</code>这样的命令时，最后权限为<code>rw-</code></p><h1 id="目录和文件的权限意义"><a href="#目录和文件的权限意义" class="headerlink" title="目录和文件的权限意义"></a>目录和文件的权限意义</h1><h2 id="对于文件而言"><a href="#对于文件而言" class="headerlink" title="对于文件而言"></a>对于文件而言</h2><table><thead><tr><th align="center">权限</th><th align="center">意义</th></tr></thead><tbody><tr><td align="center">read</td><td align="center">可读取此文件的实际内容</td></tr><tr><td align="center">write</td><td align="center">可以编辑、新增、或修改文件的内容（<strong>但不包含删除该文件</strong>）</td></tr><tr><td align="center">execute</td><td align="center">可以被系统执行的权限</td></tr></tbody></table><p>注：在<code>Windows</code>下，一个可执行文件往往和文件后缀名有关，如<code>.exe</code>,<code>.bat</code>,<code>.com</code>等，但在<code>Linux</code>中，文件是否能被执行，是借由是否具有<code>x</code>这个权限来决定的，跟文件名是没有绝对关系的。</p><h2 id="对于目录而言"><a href="#对于目录而言" class="headerlink" title="对于目录而言"></a>对于目录而言</h2><table><thead><tr><th align="left">权限</th><th align="left">意义</th></tr></thead><tbody><tr><td align="left">read contents in directory</td><td align="left">表示具有读取目录结构列表的权限，<br />即你可以使用<code>ls</code>命令查看当前目录的内容列表（文件名列表）</td></tr><tr><td align="left">modify contents of directory</td><td align="left">表示具有改动当前目录结构列表的权限，即<br />- <strong>建立新的</strong>文件与目录<br />- <strong>删除已经存在</strong>的文件与目录（不论该文件的权限是什么）<br />- 将已存在的文件或目录进行<strong>改名</strong><br />- <strong>移动</strong>该目录内的文件、目录位置</td></tr><tr><td align="left">access directory</td><td align="left">目录不能被执行，但目录的<code>x</code>表示用户是否能够进入该目录，使之成为工作目录，即使用<code>cd</code>命令进入</td></tr></tbody></table><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li>《鸟哥的 Linux 私房菜》</li></ul>]]></content>
      
      
      <categories>
          
          <category> StudyNotes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux Learning III (开源项目的部署)</title>
      <link href="/2020/06/25/Config-my-centos-server-III/"/>
      <url>/2020/06/25/Config-my-centos-server-III/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>既然有了服务器，总想运行部署点什么，（之前自己写的 flask 太丑了），想着🐑哥之前力荐的<a href="https://ruoyi.vip" target="_blank" rel="noopener">若依</a>项目很适合拿来练手，而且🐑哥也出了一期“保姆级视频”，就想着也来部署一个玩玩，虽然有视频教程了，但是在部署的过程中还是遇到了不少麻烦，（流下了不学无术的泪水）</p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><blockquote><p><a href="https://www.bilibili.com/video/BV1uK411p7Bp" target="_blank" rel="noopener">🐑哥的部署视频</a></p><p><a href="https://gitee.com/y_project/RuoYi-Vue" target="_blank" rel="noopener">若依项目地址[前后端分离版]</a></p></blockquote><h1 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h1><p>前面我只配置了 <code>Python</code>、<code>Git</code>、<code>Node</code>、<code>MySQL</code>等环境，由于若依是用<code>SpringBoot</code>写的，所以我们还需要配置<code>JDK1.8</code>以及<code>Maven</code>、<code>Tomcat</code>、<code>Redis</code>等。</p><h2 id="JDK-的配置"><a href="#JDK-的配置" class="headerlink" title="JDK 的配置"></a>JDK 的配置</h2><h3 id="准备-JDK-安装包"><a href="#准备-JDK-安装包" class="headerlink" title="准备 JDK 安装包"></a>准备 JDK 安装包</h3><p>这里准备的是<code>jdk-8u161-linux-x64.tar.gz</code>，并放在了<code>root</code>目录下</p><h3 id="卸载已有的-OPENJDK"><a href="#卸载已有的-OPENJDK" class="headerlink" title="卸载已有的 OPENJDK"></a>卸载已有的 OPENJDK</h3><p>可以通过命令：</p><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">rpm <span class="literal">-qa</span> | grep java</span><br></pre></td></tr></table></figure><p>来查看，如果有输出，则将这些包全部卸载</p><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">yum <span class="literal">-y</span> remove java....(省略)</span><br></pre></td></tr></table></figure><h3 id="创建-Java-目录并解压"><a href="#创建-Java-目录并解压" class="headerlink" title="创建 Java 目录并解压"></a>创建 Java 目录并解压</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">cd /usr/local</span><br><span class="line">mkdir java</span><br><span class="line">cd java</span><br><span class="line">tar <span class="literal">-zxvf</span> /root/jdk<span class="literal">-8u161</span><span class="literal">-linux</span><span class="literal">-x64</span>.tar.gz <span class="literal">-C</span> ./</span><br></pre></td></tr></table></figure><p>解压完成，在<code>/usr/local/java</code>⽬录中会出现⼀个<code>jdk1.8.0_161</code>的文件夹</p><h3 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h3><p>编辑<code>/etc/profile</code>文件，在文件尾部加入如下<code>JDK</code>环境配置即可</p><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">JAVA_HOME=/usr/local/java/jdk1.<span class="number">8.0</span>_161 </span><br><span class="line">CLASSPATH=<span class="variable">$JAVA_HOME</span>/lib/ </span><br><span class="line">PATH=<span class="variable">$PATH:</span><span class="variable">$JAVA_HOME</span>/bin </span><br><span class="line">export PATH JAVA_HOME CLASSPATH</span><br></pre></td></tr></table></figure><p>刷新环境变量</p><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure><h3 id="验证安装结果"><a href="#验证安装结果" class="headerlink" title="验证安装结果"></a>验证安装结果</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">java <span class="literal">-version</span></span><br><span class="line">javac</span><br></pre></td></tr></table></figure><h2 id="Maven-项目管理工具"><a href="#Maven-项目管理工具" class="headerlink" title="Maven 项目管理工具"></a>Maven 项目管理工具</h2><h3 id="准备安装包并解压"><a href="#准备安装包并解压" class="headerlink" title="准备安装包并解压"></a>准备安装包并解压</h3><p>这⾥下载的是<code>apache-maven-3.6.3-bin.tar.gz</code>并将其放置在新创建的<code>/opt/maven/</code>目录下</p><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">tar zxvf apache<span class="literal">-maven</span><span class="literal">-3</span>.<span class="number">6.3</span><span class="literal">-bin</span>.tar.gz</span><br></pre></td></tr></table></figure><h3 id="配置镜像源"><a href="#配置镜像源" class="headerlink" title="配置镜像源"></a>配置镜像源</h3><p>修改<code>/opt/maven/apache-maven-3.6.3/conf/settings.xml</code>文件，在<code>&lt;mirrors&gt;&lt;/mirrors&gt;</code>标签中加入如下内容</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">id</span>&gt;</span>alimaven<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun maven<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="配置环境变量-1"><a href="#配置环境变量-1" class="headerlink" title="配置环境变量"></a>配置环境变量</h3><p>编辑<code>/etc/profile</code>文件，在文件尾部添加如下内容</p><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">export MAVEN_HOME=/opt/maven/apache<span class="literal">-maven</span><span class="literal">-3</span>.<span class="number">6.3</span> </span><br><span class="line">export PATH=<span class="variable">$MAVEN_HOME</span>/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure><p>刷新环境变量</p><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure><h3 id="检验安装结果"><a href="#检验安装结果" class="headerlink" title="检验安装结果"></a>检验安装结果</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">mvn <span class="literal">-v</span></span><br></pre></td></tr></table></figure><h2 id="Redis-缓存安装"><a href="#Redis-缓存安装" class="headerlink" title="Redis 缓存安装"></a>Redis 缓存安装</h2><h3 id="准备安装包"><a href="#准备安装包" class="headerlink" title="准备安装包"></a>准备安装包</h3><p>这⾥下载的是<code>redis-5.0.8.tar.gz</code>并放在了<code>root</code>目录下</p><p>新建<code>/usr/local/redis</code>，解压到次文件夹中</p><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">tar zxvf /root/redis<span class="literal">-5</span>.<span class="number">0.8</span>.tar.gz <span class="literal">-C</span> ./</span><br></pre></td></tr></table></figure><h3 id="编译并安装"><a href="#编译并安装" class="headerlink" title="编译并安装"></a>编译并安装</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">cd redis<span class="literal">-5</span>.<span class="number">0.8</span>/ </span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><h3 id="将-Redis-安装为系统服务并后台启动"><a href="#将-Redis-安装为系统服务并后台启动" class="headerlink" title="将 Redis 安装为系统服务并后台启动"></a>将 Redis 安装为系统服务并后台启动</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">cd utils/</span><br><span class="line">./install_server.sh</span><br></pre></td></tr></table></figure><p>一路回车，默认配置</p><h3 id="查看-Redis-服务启动情况"><a href="#查看-Redis-服务启动情况" class="headerlink" title="查看 Redis 服务启动情况"></a>查看 Redis 服务启动情况</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">systemctl status redis_6379.service</span><br></pre></td></tr></table></figure><h3 id="允许远程连接"><a href="#允许远程连接" class="headerlink" title="允许远程连接"></a>允许远程连接</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">vim /etc/redis/<span class="number">6379</span>.conf</span><br></pre></td></tr></table></figure><p>将 <code>bind 127.0.0.1</code>修改为<code>bind 0.0.0.0</code></p><p>重启<code>Redis</code>服务</p><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">systemctl restart redis_6379.service</span><br></pre></td></tr></table></figure><h3 id="设置密码"><a href="#设置密码" class="headerlink" title="设置密码"></a>设置密码</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">vim /etc/redis/<span class="number">6379</span>.conf</span><br></pre></td></tr></table></figure><p>找到如下<code>#requirepass foobared</code></p><p>去掉注释，将后面的<code>foobared</code>修改为自己的密码，保存即可</p><p>重启<code>Redis</code>服务</p><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">systemctl restart redis_6379.conf</span><br></pre></td></tr></table></figure><h1 id="本地更改配置"><a href="#本地更改配置" class="headerlink" title="本地更改配置"></a>本地更改配置</h1><h2 id="下载代码"><a href="#下载代码" class="headerlink" title="下载代码"></a>下载代码</h2><p>文件中有两个目录，分别是<code>ruoyi</code>和<code>ruoyi-ui</code>，前者是后端，后者是前端。</p><p>🐑哥使用了两台虚拟机来部署，而我这里只有一台云服务器，操作有些许不同，而且我之前还部署了我的博客，所以要对<code>nginx.conf</code>的配置要再进行修改</p><h2 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h2><p>我们需要修改<code>MySQL</code>和<code>Redis</code>和日志的配置</p><h3 id="修改数据库配置"><a href="#修改数据库配置" class="headerlink" title="修改数据库配置"></a>修改数据库配置</h3><ol><li><p>在服务器的数据库上新建一个<code>ry-vue</code>的数据库，可以使用可视化工具进行创建，我使用的是<code>TablePlus</code></p><p> <img src= "/img/loading.gif" data-src="https://gitee.com/jzhmcoo1/jzhmcoo1picrepo/raw/master/img/new-ry-db.png" alt="new-database"></p></li><li><p>下载文件中在<code>ruoyi/sql</code>下有两个<code>sql</code>文件，直接可以使用可视化工具执行这两个文件，刷新之后便可以看到新建了一些表</p></li><li><p>修改<code>ruoyi/src/main/resources/application-druid.yml</code>的文件，将其中数据库的<code>url</code>,<code>username</code>,<code>password</code>修改为自己的数据库配置</p></li></ol><h3 id="修改缓存配置"><a href="#修改缓存配置" class="headerlink" title="修改缓存配置"></a>修改缓存配置</h3><p>修改<code>ruoyi/src/main/resources/application.yml</code>文件</p><p>将其中 <code>redis</code>的<code>host</code>改为 IP 地址，<code>password</code>修改为之前设置的密码</p><h3 id="修改日志路径"><a href="#修改日志路径" class="headerlink" title="修改日志路径"></a>修改日志路径</h3><p>修改<code>/ruoyi/src/main/resources/logback.xml</code>的配置文件，修改<code>&lt;configuration&gt; &lt;property value&gt;</code>中的值，改为自定义路径</p><h3 id="修改字符集"><a href="#修改字符集" class="headerlink" title="修改字符集"></a>修改字符集</h3><p>在此<code>xml</code>文件下所有的<code>&lt;encoder&gt;&lt;/encoder&gt;</code>中加上<code>UTF-8</code>的字符集支持，避免日志看到乱码</p><h1 id="开始部署"><a href="#开始部署" class="headerlink" title="开始部署"></a>开始部署</h1><h2 id="项目打包"><a href="#项目打包" class="headerlink" title="项目打包"></a>项目打包</h2><p>我们直接将<code>ruoyi-ui</code>和<code>ruoyi</code>两个文件夹压缩，如压缩为<code>zip</code>格式，然后使用 <code>SFTP</code>工具直接拖拽到服务器文件夹中，这里直接拖到<code>/home</code>目录下</p><p>使用解压命令</p><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">unzip ruoyi.zip</span><br><span class="line">unzip ruoyi<span class="literal">-ui</span>.zip</span><br></pre></td></tr></table></figure><p>得到了两个新的文件夹</p><h3 id="前端打包"><a href="#前端打包" class="headerlink" title="前端打包"></a>前端打包</h3><ol><li><p>进入<code>ruoyi-ui</code>目录下，运行如下命令，安装依赖</p> <figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">npm install -<span class="literal">-unsafe</span><span class="literal">-perm</span> -<span class="literal">-registry</span>=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure></li><li><p>构建打包</p> <figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">npm run build:prod</span><br></pre></td></tr></table></figure><p> 成功后出现了<code>dist</code>目录，在部署时使用</p></li></ol><h3 id="后端打包"><a href="#后端打包" class="headerlink" title="后端打包"></a>后端打包</h3><p>这里只使用了<code>jar</code>包方式，比较简单</p><p>进入后端项目文件夹<code>ruoyi</code>下</p><ol><li><p>运行如下打包命令</p> <figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">mvn package</span><br></pre></td></tr></table></figure></li><li><p>进入<code>target</code>文件夹下，新增了一个<code>jar</code>包</p></li></ol><h2 id="项目部署"><a href="#项目部署" class="headerlink" title="项目部署"></a>项目部署</h2><h3 id="前端项目部署"><a href="#前端项目部署" class="headerlink" title="前端项目部署"></a>前端项目部署</h3><p>这里需要更改<code>nginx.conf</code>文件，不记得位置的话可以使用<code>nginx -t</code>命令查看</p><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">        listen       <span class="number">80</span> default_server;</span><br><span class="line">        listen       [::]:<span class="number">80</span> default_server;</span><br><span class="line">        server_name  www.lihangzhu.com;</span><br><span class="line">        root         /home/hexoBlog;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Load configuration files for the default server block.</span></span><br><span class="line">        include /etc/nginx/default.d/*.conf;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        error_page <span class="number">404</span> /<span class="number">404</span>.html;</span><br><span class="line">            location = /<span class="number">40</span>x.html &#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        error_page <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span> /<span class="number">50</span>x.html;</span><br><span class="line">            location = /<span class="number">50</span>x.html &#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>这是我们原来的 <code>conf</code>文件</p><p>我们可以直接照着原来的配置写一个，不过需要把端口改掉，将下列代码加入上面<code>server</code>的后面</p><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">        listen       <span class="number">90</span>;</span><br><span class="line">        server_name  localhost;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Load configuration files for the default server block.</span></span><br><span class="line">        include /etc/nginx/default.d/*.conf;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">            root  /home/ruoyi<span class="literal">-ui</span>/dist;</span><br><span class="line">            index index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location /prod<span class="literal">-api</span>/ &#123; </span><br><span class="line">            proxy_set_header Host <span class="variable">$http_host</span>; </span><br><span class="line">            proxy_set_header X<span class="literal">-Real</span><span class="literal">-IP</span> <span class="variable">$remote_addr</span>; </span><br><span class="line">            proxy_set_header REMOTE<span class="literal">-HOST</span> <span class="variable">$remote_addr</span>; </span><br><span class="line">            proxy_set_header X<span class="literal">-Forwarded</span><span class="literal">-For</span> <span class="variable">$proxy_add_x_forwarded_for</span>; </span><br><span class="line">            proxy_pass http://<span class="number">106.54</span>.<span class="number">65.104</span>:<span class="number">8080</span>/; </span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        error_page <span class="number">404</span> /<span class="number">404</span>.html;</span><br><span class="line">            location = /<span class="number">40</span>x.html &#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        error_page <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span> /<span class="number">50</span>x.html;</span><br><span class="line">            location = /<span class="number">50</span>x.html &#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>其中<code>location /prod-api/</code>是前后端的接口</p><p>重新加载一下<code>nginx</code>配置</p><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">service nginx reload</span><br></pre></td></tr></table></figure><h3 id="后端项目部署"><a href="#后端项目部署" class="headerlink" title="后端项目部署"></a>后端项目部署</h3><p>在<code>ruoyi/target</code>目录下，执行</p><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">java –jar ruoyi.jar</span><br></pre></td></tr></table></figure><h2 id="部署结果"><a href="#部署结果" class="headerlink" title="部署结果"></a>部署结果</h2><p>打开浏览器输入我们的地址和端口号<code>http://106.54.65.104:90</code></p><p>部署成功</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/jzhmcoo1/jzhmcoo1picrepo/raw/master/img/ruoyi-login.jpg" alt=""></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/jzhmcoo1/jzhmcoo1picrepo/raw/master/img/ruoyi-admin.jpg" alt=""></p><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>感谢前辈们精彩的开源项目和部署教程，让我一个小白也能体会到乐趣，虽然我什么也不会写。</p><p>希望今后我也能努力学习，全栈冲冲冲！</p>]]></content>
      
      
      <categories>
          
          <category> StudyNotes </category>
          
          <category> BuildDevEnv </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> RuoYi </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux Learning II (Hexo 从 GitPage 到腾讯云)</title>
      <link href="/2020/06/22/Config-my-centos-server-II/"/>
      <url>/2020/06/22/Config-my-centos-server-II/</url>
      
        <content type="html"><![CDATA[<h1 id="配置-Git"><a href="#配置-Git" class="headerlink" title="配置 Git"></a>配置 Git</h1><p>详情见上一篇<a class="btn-beautify button--animated blue larger" href="/2020/06/20/Config-my-centos-server-I/#%E5%AE%89%E8%A3%85-git" title="Linux Learning I">  <i class="far fa-hand-point-right fa-fw"></i> Linux Learning I </a></p><h2 id="创建-Git-裸仓库"><a href="#创建-Git-裸仓库" class="headerlink" title="创建 Git 裸仓库"></a>创建 Git 裸仓库</h2><p>我选择在<code>/home/git</code>目录下，创建一个名为<code>hexoBlog</code>的仓库，然后修改目录的所有权和用户权限。</p><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">mkdir /home/git/</span><br><span class="line">chown <span class="literal">-R</span> <span class="variable">$USER:</span><span class="variable">$USER</span> /home/git/</span><br><span class="line">chmod <span class="literal">-R</span> <span class="number">755</span> /home/git/</span><br></pre></td></tr></table></figure><h2 id="git-初始化"><a href="#git-初始化" class="headerlink" title="git 初始化"></a>git 初始化</h2><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">cd /home/git/</span><br><span class="line">git init -<span class="literal">-bare</span> hexoBlog.git</span><br></pre></td></tr></table></figure><p>在<code>/home/git/hexoBlog.git</code>下，自动生成了<code>hooks</code>文件夹。我们在里边新建一个钩子文件夹<code>post-receive</code></p><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">vim /home/git/hexoBlog.git/hooks/post<span class="literal">-receive</span></span><br></pre></td></tr></table></figure><p>在文件追加以下内容</p><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">git -<span class="literal">-work</span><span class="literal">-tree</span>=/home/hexoBlog -<span class="literal">-git</span><span class="literal">-dir</span>=/home/git/hexoBlog.git checkout <span class="operator">-f</span></span><br></pre></td></tr></table></figure><p>保存退出</p><h2 id="修改文件权限，使其可执行"><a href="#修改文件权限，使其可执行" class="headerlink" title="修改文件权限，使其可执行"></a>修改文件权限，使其可执行</h2><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">chmod +x /home/git/hexoBlog.git/hooks/post<span class="literal">-receive</span></span><br></pre></td></tr></table></figure><h1 id="Nginx的配置"><a href="#Nginx的配置" class="headerlink" title="Nginx的配置"></a>Nginx的配置</h1><p>安装步骤请见上一篇<a class="btn-beautify button--animated blue larger" href="/2020/06/20/Config-my-centos-server-I/#Nginx-%E5%AE%89%E8%A3%85" title="Linux Learning I">  <i class="far fa-hand-point-right fa-fw"></i> Linux Learning I </a></p><h2 id="更改-Nginx-托管文件目录"><a href="#更改-Nginx-托管文件目录" class="headerlink" title="更改 Nginx 托管文件目录"></a>更改 Nginx 托管文件目录</h2><p>创建<code>/home/hexoBlog</code>目录，用于 Nginx 托管</p><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">mkdir /home/hexoBlog/</span><br><span class="line">chown <span class="literal">-R</span> <span class="variable">$USER:</span><span class="variable">$USER</span> /home/hexoBlog/</span><br><span class="line">chmod <span class="literal">-R</span> <span class="number">755</span> /home/hexoBlog/</span><br></pre></td></tr></table></figure><h2 id="修改-Nginx-的默认配置"><a href="#修改-Nginx-的默认配置" class="headerlink" title="修改 Nginx 的默认配置"></a>修改 Nginx 的默认配置</h2><p>注：安装位置可能不一样</p><p>使用<code>nginx -t</code>查看</p><p>我的在<code>/etc/nginx/nginx.conf</code></p><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">vim /etc/nginx/nginx.conf</span><br></pre></td></tr></table></figure><p>我们需要修改：</p><ol><li><code>root</code>的值改为<code>/home/hexoBlog</code></li><li>将<code>server_name</code>改成你的域名</li></ol><p>保存退出</p><h2 id="重启-Nginx-服务"><a href="#重启-Nginx-服务" class="headerlink" title="重启 Nginx 服务"></a>重启 Nginx 服务</h2><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">service nginx restart</span><br></pre></td></tr></table></figure><h1 id="修改-hexo-站点-git-配置"><a href="#修改-hexo-站点-git-配置" class="headerlink" title="修改 hexo 站点 git 配置"></a>修改 hexo 站点 git 配置</h1><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> </span><br><span class="line">    <span class="attr">centos:</span> <span class="string">root@&lt;你的ip地址&gt;:/home/git/hexoBlog</span></span><br><span class="line">    <span class="comment"># github: https://github.com/jzhmcoo1/jzhmcoo1.github.io.git</span></span><br><span class="line">    <span class="comment"># gitee: https://gitee.com/jzhmcoo1/jzhmcoo1.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><h2 id="执行部署命令"><a href="#执行部署命令" class="headerlink" title="执行部署命令"></a>执行部署命令</h2><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">cd &lt;你的博客根目录&gt;</span><br><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>然后访问公网 IP，部署成功。</p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><blockquote><ul><li><a href="https://cloud.tencent.com/developer/article/1140005" target="_blank" rel="noopener">Hexo 博客部署到腾讯云教程</a></li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> StudyNotes </category>
          
          <category> BuildDevEnv </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux Learning I (云服务器的购买与配置)</title>
      <link href="/2020/06/20/Config-my-centos-server-I/"/>
      <url>/2020/06/20/Config-my-centos-server-I/</url>
      
        <content type="html"><![CDATA[<h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p>由于下学期将要开始学习 <code>Linux</code>和<code>计算机网络</code>，虚拟机环境感觉不过瘾，乘次机会想要摆弄摆弄云服务器，学生价也不贵，于是就在腾讯云上整了一台，开始学习 <code>Linux</code>。</p><p>打算写<code>Linux</code>学习的一系列文章</p><p>打算先写一些基础的环境搭建文章</p><p>目前打算写的有：</p><ul><li>Linux 云服务器的购买与配置</li><li>Hexo 博客从 Gitpages 到腾讯云的迁移</li><li>…</li></ul><hr><h1 id="正式开始"><a href="#正式开始" class="headerlink" title="正式开始"></a>正式开始</h1><h2 id="购买服务器"><a href="#购买服务器" class="headerlink" title="购买服务器"></a>购买服务器</h2><p>首先进入腾讯云学生优惠官网选购 <code>CentOS7.6</code></p><p>这里给出购买链接</p><ul><li><a href="https://cloud.tencent.com/act/campus" target="_blank" rel="noopener">学生购买链接</a></li><li><a href="https://dnspod.cloud.tencent.com/" target="_blank" rel="noopener">域名购买</a></li></ul><p>购买完成后可以从控制台登录云服务器，不过还是通过 ssh 客户端来登录比较方便，</p><p>mac 平台上我使用的是 <code>secureCRT+Transmit</code>来输入命令以及传输文件</p><h2 id="解析域名"><a href="#解析域名" class="headerlink" title="解析域名"></a>解析域名</h2><p>在控制台解析域名，可以使用快速解析将域名指向云服务器</p><p>不过刚买的域名实名认证之后需要三天才可以申请备案</p><p>具体请参考腾讯云的<a href="https://cloud.tencent.com/document/product/213/2936" target="_blank" rel="noopener">云服务器的快速入门</a></p><h2 id="申请-SSL-证书"><a href="#申请-SSL-证书" class="headerlink" title="申请 SSL 证书"></a>申请 SSL 证书</h2><p>想要走 https 就要去<a href="https://console.cloud.tencent.com/ssl" target="_blank" rel="noopener">申请 SSl 证书</a>了</p><p>我们可以直接申请免费证书 1 年有效期，验证还是非常快的</p><hr><h1 id="配置服务器"><a href="#配置服务器" class="headerlink" title="配置服务器"></a>配置服务器</h1><h2 id="安装-git"><a href="#安装-git" class="headerlink" title="安装 git"></a>安装 git</h2><p>包管理器安装很方便</p><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">yum install git</span><br></pre></td></tr></table></figure><p>安装的版本是<code>1.8.3.1</code></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/jzhmcoo1/jzhmcoo1picrepo/raw/master/img/gitversion1.8.png" alt=""></p><p>要安装最新版的 git 需要去官网上下载源码后安装</p><h2 id="安装-Python3-环境"><a href="#安装-Python3-环境" class="headerlink" title="安装 Python3 环境"></a>安装 Python3 环境</h2><p>系统自带的 Python 环境为</p><p><code>Python 2.7.5</code></p><p>我们想要安装最新的 <code>Python</code>环境</p><h3 id="准备最新的-Python3-安装包"><a href="#准备最新的-Python3-安装包" class="headerlink" title="准备最新的 Python3 安装包"></a>准备最新的 Python3 安装包</h3><p>先从官网上下载安装包，实验时的最新版为<code>Python3.8.3</code></p><p>可以利用<code>Transmit</code>之类的传输工具很方便的拖拽到服务器上，</p><p>这里直接拖到<code>/root</code>目录下</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/jzhmcoo1/jzhmcoo1picrepo/raw/master/img/py383tgz.png" alt="image-20200621231542906"></p><p>输入命令解压</p><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">tar zxvf Python<span class="literal">-3</span>.<span class="number">8.3</span>.tgz</span><br></pre></td></tr></table></figure><h3 id="安装相关环境"><a href="#安装相关环境" class="headerlink" title="安装相关环境"></a>安装相关环境</h3><p>直接运行下列命令</p><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">yum install zlib<span class="literal">-devel</span> bzip2<span class="literal">-devel</span> openssl<span class="literal">-devel</span> ncurses<span class="literal">-devel</span> sqlitedevel readline<span class="literal">-devel</span> tk<span class="literal">-devel</span> gcc make</span><br></pre></td></tr></table></figure><h3 id="编译与安装"><a href="#编译与安装" class="headerlink" title="编译与安装"></a>编译与安装</h3><p>这里指定了安装目录为<code>/usr/local/python3</code></p><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">cd Python<span class="literal">-3</span>.<span class="number">8.3</span>/</span><br><span class="line">./configure prefix=/usr/local/python3</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><h3 id="添加符号链接"><a href="#添加符号链接" class="headerlink" title="添加符号链接"></a>添加符号链接</h3><p>将链接接到<code>/usr/bin</code>目录下，方便以后使用 <code>Python3</code></p><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">ln <span class="literal">-s</span> /usr/local/python3/bin/python3 /usr/bin/python3</span><br><span class="line">ln <span class="literal">-s</span> /usr/local/python3/bin/pip3 /usr/bin/pip3</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-src="https://gitee.com/jzhmcoo1/jzhmcoo1picrepo/raw/master/img/py383installed.png" alt="Python3.8.3安装完成"></p><h2 id="Node-js-环境安装"><a href="#Node-js-环境安装" class="headerlink" title="Node.js 环境安装"></a>Node.js 环境安装</h2><h3 id="准备最新的安装包"><a href="#准备最新的安装包" class="headerlink" title="准备最新的安装包"></a>准备最新的安装包</h3><p>我们直接从官网上下载最新版本的源码<code>node-v12.18.1.tar.gz</code>，将其放在了<code>\root</code>目录下</p><h3 id="创建目录并解压"><a href="#创建目录并解压" class="headerlink" title="创建目录并解压"></a>创建目录并解压</h3><p>在<code>/usr/local</code>下创建<code>node</code>文件夹并进入</p><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">cd /usr/local/ </span><br><span class="line">mkdir node </span><br><span class="line">cd node</span><br></pre></td></tr></table></figure><p>将<code>Node</code>安装包解压到<code>/usr/local/node</code>中</p><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">tar <span class="literal">-xJvf</span> /root/node<span class="literal">-v12</span>.<span class="number">18.1</span><span class="literal">-linux</span><span class="literal">-x64</span>.tar.xz <span class="literal">-C</span> ./</span><br></pre></td></tr></table></figure><p>解压完成，在<code>/usr/local/node</code>目录中出现一个<code>node-v12.18.1-linux-x64</code>文件夹</p><h3 id="配置Node系统环境变量"><a href="#配置Node系统环境变量" class="headerlink" title="配置Node系统环境变量"></a>配置Node系统环境变量</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">vim ~./bash_profile</span><br></pre></td></tr></table></figure><p>在文件末尾添加信息：</p><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Nodejs</span></span><br><span class="line">export PATH=/usr/local/node/node<span class="literal">-v12</span>.<span class="number">18.1</span><span class="literal">-linux</span><span class="literal">-x64</span>/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure><p>然后刷新环境变量</p><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">source ~/.bash_profile</span><br></pre></td></tr></table></figure><h3 id="检查安装结果"><a href="#检查安装结果" class="headerlink" title="检查安装结果"></a>检查安装结果</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">node <span class="literal">-v</span></span><br><span class="line">npm version</span><br><span class="line">npx <span class="literal">-v</span></span><br></pre></td></tr></table></figure><p>均有版本输出信息即可</p><h2 id="Nginx-安装"><a href="#Nginx-安装" class="headerlink" title="Nginx 安装"></a>Nginx 安装</h2><p>我们直接使用 <code>yum</code>进行安装</p><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">yum install <span class="literal">-y</span> nginx</span><br></pre></td></tr></table></figure><p>启动<code>Nginx</code></p><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">service nginx start</span><br></pre></td></tr></table></figure><p>测试<code>Nginx</code>服务器</p><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">wget http://<span class="number">127.0</span>.<span class="number">0.1</span></span><br></pre></td></tr></table></figure><p>接下来输入公网 ip，测试网页是否能够打开，看到 <code>Nginx</code> 欢迎页面即可</p><p>托管文件目录的改变将会放到下一篇<a class="btn-beautify button--animated blue larger" href="/2020/06/22/Config-my-centos-server-II/#Nginx%E7%9A%84%E9%85%8D%E7%BD%AE" title="Linux Learning II">  <i class="far fa-hand-point-right fa-fw"></i> Linux Learning II </a></p><h2 id="MySQL-数据库的安装"><a href="#MySQL-数据库的安装" class="headerlink" title="MySQL 数据库的安装"></a>MySQL 数据库的安装</h2><p>由于 Centos 的 yum 源中没有 MySQL，需要到 MySQL 官网下载 yum repo 的配置文件</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/jzhmcoo1/jzhmcoo1picrepo/raw/master/img/mysql-yum-no.png" alt="no-mysql-server"></p><h3 id="下载配置文件"><a href="#下载配置文件" class="headerlink" title="下载配置文件"></a>下载配置文件</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">wget https://dev.mysql.com/get/mysql57<span class="literal">-community</span><span class="literal">-release</span><span class="literal">-el7</span><span class="literal">-9</span>.noarch.rpm</span><br></pre></td></tr></table></figure><h3 id="进行-repo-的安装"><a href="#进行-repo-的安装" class="headerlink" title="进行 repo 的安装"></a>进行 repo 的安装</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">rpm <span class="literal">-ivh</span> mysql57<span class="literal">-community</span><span class="literal">-release</span><span class="literal">-el7</span><span class="literal">-9</span>.noarch.rpm</span><br></pre></td></tr></table></figure><h3 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">yum install mysql<span class="literal">-server</span></span><br></pre></td></tr></table></figure><h3 id="启动-MySQL"><a href="#启动-MySQL" class="headerlink" title="启动 MySQL"></a>启动 MySQL</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">systemctl start mysqld</span><br></pre></td></tr></table></figure><h3 id="查看临时密码"><a href="#查看临时密码" class="headerlink" title="查看临时密码"></a>查看临时密码</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">grep <span class="string">'temporary password'</span> /var/log/mysqld.log</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-src="https://gitee.com/jzhmcoo1/jzhmcoo1picrepo/raw/master/img/mysqltemppwd.png" alt="temporary-password"></p><h3 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">mysql <span class="literal">-u</span> root <span class="literal">-p</span></span><br></pre></td></tr></table></figure><h3 id="修改密码"><a href="#修改密码" class="headerlink" title="修改密码"></a>修改密码</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">set password&#x3D;password(&quot;&lt;你的密码&gt;&quot;);</span><br></pre></td></tr></table></figure><p>要注意密码需要有一定的强度</p><h3 id="修改远程访问"><a href="#修改远程访问" class="headerlink" title="修改远程访问"></a>修改远程访问</h3><p>MySQL 默认不开启远程访问，默认只能是自己的机器，</p><p>接下来使用<code>grant</code>命令来修改</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">grant all privileges on *.* to root@&quot;你的 ip 地址&quot; identified by &quot;你的密码&quot;;</span><br></pre></td></tr></table></figure><p>其中：</p><ul><li><code>*.*</code>表示所有数据库</li><li><code>root</code>代表用户名</li><li><code>root</code>后的 IP地址如果写成<code>%</code>则表示任意的客户端，写成<code>localhost</code>则只能本地访问</li></ul><p><img src= "/img/loading.gif" data-src="https://gitee.com/jzhmcoo1/jzhmcoo1picrepo/raw/master/img/testconnectmysql.jpg" alt="testconnectmysql"></p><p>成功连接即可</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/jzhmcoo1/jzhmcoo1picrepo/raw/master/img/mysqlconnectsuccess.png" alt="mysql-connection-success"></p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><blockquote><ul><li><a href="https://blog.csdn.net/wohiusdashi/article/details/89358071" target="_blank" rel="noopener">MySQL 的安装</a></li><li><a href="https://github.com/hansonwang99/JavaCollection" target="_blank" rel="noopener">JavaCollection</a></li></ul></blockquote><p>下一篇将会讲 Hexo 博客的迁移</p>]]></content>
      
      
      <categories>
          
          <category> StudyNotes </category>
          
          <category> BuildDevEnv </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flask博客开发记录</title>
      <link href="/2020/06/03/Flask-dev-note/"/>
      <url>/2020/06/03/Flask-dev-note/</url>
      
        <content type="html"><![CDATA[<h1 id="一、项目简介"><a href="#一、项目简介" class="headerlink" title="一、项目简介"></a>一、项目简介</h1><h2 id="1-做了什么？"><a href="#1-做了什么？" class="headerlink" title="1. 做了什么？"></a>1. 做了什么？</h2><ul><li>我做的这个项目是一个基于 flask（一个Python 后端框架） 的博客网站</li></ul><h2 id="2-为什么想到要做这么一个项目？"><a href="#2-为什么想到要做这么一个项目？" class="headerlink" title="2. 为什么想到要做这么一个项目？"></a>2. 为什么想到要做这么一个项目？</h2><ol><li>因为平时有不懂的问题在搜索引擎上进行搜索时，一般跳出来的前几名答案都来自诸如 csdn，博客园，简书等等博客网站的回答，故觉得博客很有用；</li><li>很多大牛都在写自己的博客，比如阮一峰、廖雪峰等，我们写了是不是可以与他们稍稍拉近距离呢？</li><li>我们学习时往往只注重了输入，一味地学习通常会感觉知识点记不住，每次用到时都要去查，我觉得不如能自己写博客，培养自己的总结能力与习惯，当我们有知识的输出时，我们才会对知识记忆和理解得更深刻，这样即使以后忘了，看一眼自己总结过的知识点，回忆起来会想当迅速。</li></ol><h2 id="3-如何实现或者有哪些解决方案？"><a href="#3-如何实现或者有哪些解决方案？" class="headerlink" title="3. 如何实现或者有哪些解决方案？"></a>3. 如何实现或者有哪些解决方案？</h2><ul><li>最方便的当然是去各大知名博客网站，在那里进行写作，这是最轻松方便的，不需要操心任何事情专心写作即可；</li><li>或者可以使用一些博客框架，比如一些静态博客框架如 <code>hexo</code>（基于<code>node.js</code>），<code>hugo</code>（基于<code>go</code>）和一些动态博客框架如 <code>WordPress</code>，<code>typecho</code> 等，这些博客框架搭建完环境后也非常容易写作，主要是可以将网站的主题改成自己喜爱的样子；</li><li>还有一种当然是所有的都是自己实现了，也就是自己写一个博客网站，我感觉这个要做的好，要求比较很高，需要有扎实 web 开发的基础。</li></ul><h1 id="二、需求分析"><a href="#二、需求分析" class="headerlink" title="二、需求分析"></a>二、需求分析</h1><p>一个博客需要有什么功能呢？</p><p>我们可以从各大博客网站，博客框架中进行归纳总结，我总结出来一些功能：</p><ol><li>注册、登录、注销、后台管理界面（本条针对动态博客）</li><li>写文章、编辑更新文章、查看文章、删除文章</li><li>点赞、评论、分享</li><li>支持 markdown 语法写作</li><li>个人资料页的展示（包括作者资料，最近发表的文章）</li><li>…</li></ol><h1 id="三、技术点简介"><a href="#三、技术点简介" class="headerlink" title="三、技术点简介"></a>三、技术点简介</h1><h2 id="1-flask"><a href="#1-flask" class="headerlink" title="1. flask"></a>1. flask</h2><p>flask 是我项目用到的一个 Python Web后端框架，特点是轻量级，支持自由灵活高度定制，（虽然对我一个没有什么开发经验的人来说没有什么区别）。</p><p>当然，与 flask 同一类型的 Python 开发框架就是大名鼎鼎的 <code>Django</code> 了，我们可以根据官方文档总结一下他们的特点</p><table><thead><tr><th align="center">项目</th><th align="center">Flask</th><th align="center">Django</th></tr></thead><tbody><tr><td align="center">量级</td><td align="center">轻量级</td><td align="center">重量级</td></tr><tr><td align="center">特点</td><td align="center">只提供 web 框架的核心功能，自由灵活高度定制</td><td align="center">为方便业务程序的开发，提供了丰富的工具、组件</td></tr><tr><td align="center">用此框架实现的网站</td><td align="center">LinkedIn，Netflix，Twilio，Uber</td><td align="center">Bitbucket，Eventbrite， Instagram，Pinterest</td></tr></tbody></table><p>我选择 flask 的原因很大一部分原因是因为简单，因为我只是开发一个小网站，并不是大型网站，使用<code>Django</code>的话感觉学习成本更高。</p><h2 id="2-数据库的选择"><a href="#2-数据库的选择" class="headerlink" title="2. 数据库的选择"></a>2. 数据库的选择</h2><p>根据 flask 的官方文档，推荐可供选择的数据库是：<code>SQLite</code> 和 <code>SQLAlchemy</code></p><p>他们的特点是</p><table><thead><tr><th align="center">SQLite 3</th><th align="center">SQLAlchemy</th></tr></thead><tbody><tr><td align="center">Python 内置，简单</td><td align="center">需要额外配置，比较麻烦</td></tr><tr><td align="center">适用于小型应用，不适合并发场合</td><td align="center">适用于大型应用、高并发场合</td></tr></tbody></table><p>很显然，SQLite 适合我这个小项目，用不上并发编程，所以我选了 SQLite3。</p><h2 id="3-前端的模版"><a href="#3-前端的模版" class="headerlink" title="3. 前端的模版"></a>3. 前端的模版</h2><p>从服务器端取出的数据当然需要在前端展示，flask 中引入了一个叫<code>Jinja</code>的模版引擎，这个引擎可以很方便地来实现：</p><ul><li>子页面继承母版页面；</li><li>从服务器端取出的数据通过变量插入模版展示在前端；</li><li>前端页面插入<code>if</code>条件语句,<code>for</code>循环语句来帮助我们控制前端展示的逻辑。</li></ul><p>这是一个<code>Jinja</code>文档中简单的例子：</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/jzhmcoo1/jzhmcoo1picrepo/raw/master/img/jinja.png" alt="image-20200602161135385"></p><p>可以看到，使用<code>NaN</code>的形式可以很轻松地插入表达式或传递变量。</p><h1 id="四、功能的实现"><a href="#四、功能的实现" class="headerlink" title="四、功能的实现"></a>四、功能的实现</h1><p>从我分析的需求中，（由于能力和精力有限）我挑选了一些功能进行实现。</p><ul><li><input checked="" disabled="" type="checkbox"> <p>登录，注册，注销 </p></li><li><input checked="" disabled="" type="checkbox"> <p>评论</p></li><li><input checked="" disabled="" type="checkbox"> <p>写文章，查看文章，编辑文章，删除文章</p></li><li><input checked="" disabled="" type="checkbox"> <p>markdown语法写作支持</p></li><li><input checked="" disabled="" type="checkbox"> <p>个人资料页的展示</p></li><li><input checked="" disabled="" type="checkbox"> <p>上传图片(文章封面图，作者个人图片)</p></li><li><input disabled="" type="checkbox"> <p>点赞、分享</p></li><li><input disabled="" type="checkbox"> <p>文章目录（点了就能直接跳转的那种）</p></li><li><input disabled="" type="checkbox"> <p>分享功能（分享到 QQ，微信）</p></li><li><input disabled="" type="checkbox"> <p>…</p></li></ul><p>刚开始觉得看着简单，但真正地实现这些功能，不自己动手写一写真实不知道会遇到的坑和 bug 真是数不胜数，下面简单地说一下实现思路：</p><ol><li><p>账号管理</p><ul><li>基本的账号管理，牵涉到数据库的CRUD；</li><li>注册时，首先需要判断是否和已有账号重复，前端对密码验证时，进行了两次验证，确保密码输入一致，保存密码到数据库时，不建议直接明文保存，还好 flask 提供了一个<code>generate_password_hash(password)</code>的函数，对明文密码先进行 hash，再存储到数据库中；</li><li>登录时对用户输入的用户名密码进行检查，若无误，则把<code>session</code>赋值为登录用户；</li><li>注销时，对<code>session</code>进行清除即可。</li></ul></li><li><p>文章的操作</p><ul><li>写（编辑）需要用到前端的<code>Webform</code>，将文章的信息，内容保存到数据库中；</li><li>为了实现<code>markdown</code>写作，Python 中正好题库了这么一个库，就叫<code>markdown</code>，它可以将<code>markdown</code>语法的字符串转换为带有<code>html</code>标记，再通过<code>jinja</code>模版引擎，把已经转换到带有<code>html</code>标记的文章嵌入前端页面中，即可实现，展示效果通过<code>css</code>实现；</li></ul></li><li><p>图片（文件）上传</p><ul><li>图片如何上传呢？图片不是文本文件，不能直接保存到数据库中；</li><li>我在网上搜索了解决方案，一种是使用编码方式，将图片转换为编码文本（如<code>Base64</code>）再存入数据库。仔细想了一下，感觉不适用，首先是因为麻烦，每次浏览时都需要从数据库中取出编码文本，进行译码，形成图片文件，其次是前端展示时需要用到<code>&lt;img src=&quot;&quot;&gt;</code>标签，那么我们的文件超链接哪里来呢？感觉实现困难。</li><li>第二种方式比较可行，即当上传一张图片时，服务器将图片保存到本地的文件系统中，同时形成绝对地址，再将地址保存到数据库中，这样不仅方便取，也方便更新文件。</li><li>保存文件使用了 Python 中的<code>os</code>内置库，非常方便。想到文件的重名问题，我还引入了 time 库，用户上传文件时，通过获取当前的系统时间，对文件重命名为<code>年月日时分秒.jpg</code>这样的格式，保证不会重复；</li><li>当用户更新自己的图片时，从数据库中取出已有的文件路径，对其进行删除，再保存新文件到本地文件系统，将路径存放到数据库中。</li></ul></li><li><p>评论</p><ul><li>评论我没有自己进行实现，由于我自己 hexo 博客是引入的是<code>valine</code>的无数据库评论模块，简单，方便，美观（何必重复造轮子呢？）只需要引入<code>js</code>就能够嵌入前端页面中。</li></ul></li></ol><h1 id="五、项目结构"><a href="#五、项目结构" class="headerlink" title="五、项目结构"></a>五、项目结构</h1><p>下面是项目的主要组成结构树形图，对主要的文件（夹）我进行了说明：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">37 directories</span><br><span class="line"> lixing  ~&#x2F;PycharmProjects&#x2F;MyBlog&#x2F;flaskr   master  tree</span><br><span class="line">.</span><br><span class="line">├── __init__.py &#x2F;&#x2F; 工厂函数文件</span><br><span class="line">├── auth.py &#x2F;&#x2F; 账号相关操作的代码</span><br><span class="line">├── blog.py &#x2F;&#x2F; 博客文章相关代码</span><br><span class="line">├── config.py &#x2F;&#x2F; 对文件路径进行配置</span><br><span class="line">├── db.py &#x2F;&#x2F; 数据库相关代码</span><br><span class="line">├── schema.sql &#x2F;&#x2F; 初始化数据库（建表）的代码</span><br><span class="line">├── setup.py &#x2F;&#x2F; 配置相关代码</span><br><span class="line">├── static &#x2F;&#x2F; 静态文件（css，图片，js）</span><br><span class="line">│   ├── blog.css</span><br><span class="line">│   ├── images</span><br><span class="line">│   │   ├── bg4.jpg</span><br><span class="line">│   │   ├── default</span><br><span class="line">│   │   │   ├── default.jpg</span><br><span class="line">│   │   │   └── post.jpg</span><br><span class="line">│   │   ├── footer-bg.png</span><br><span class="line">│   │   └── upload</span><br><span class="line">│   │       ├── avatars</span><br><span class="line">│   │       └── postImages</span><br><span class="line">│   ├── styles.css</span><br><span class="line">│   └── theme &#x2F;&#x2F; 这个是我套用的一个 bootstrap 模版的相关文件</span><br><span class="line">│       ├── css</span><br><span class="line">│       │   ├── maps</span><br><span class="line">│       │   │   └── style.css.map</span><br><span class="line">│       │   └── style.css</span><br><span class="line">│       ├── images</span><br><span class="line">│       ├── js</span><br><span class="line">│       │   └── script.js</span><br><span class="line">│       ├── plugins</span><br><span class="line">│       │   ├── bootstrap</span><br><span class="line">│       │   ├── fonts</span><br><span class="line">│       │   ├── jQuery</span><br><span class="line">│       │   ├── shuffle</span><br><span class="line">│       │   ├── slick</span><br><span class="line">│       │   └── themify-icons</span><br><span class="line">│       └── scss</span><br><span class="line">└── templates &#x2F;&#x2F; 母版文件夹</span><br><span class="line">    ├── Homepage.html</span><br><span class="line">    ├── auth</span><br><span class="line">    │   ├── info.html</span><br><span class="line">    │   ├── login.html</span><br><span class="line">    │   ├── register.html</span><br><span class="line">    │   └── update.html</span><br><span class="line">    └── blog</span><br><span class="line">        ├── create.html</span><br><span class="line">        ├── detail.html</span><br><span class="line">        ├── index.html</span><br><span class="line">        └── update.html</span><br></pre></td></tr></table></figure><h1 id="六、项目展示"><a href="#六、项目展示" class="headerlink" title="六、项目展示"></a>六、项目展示</h1><ol><li><p>配置<code>flask</code>运行环境，初始化数据库，启动项目</p> <figure class="highlight zsh"><table><tr><td class="code"><pre><span class="line">(venv)  lixing  ~/PycharmProjects/MyBlog   master  <span class="built_in">export</span> FLASK_APP=flaskr     </span><br><span class="line">(venv)  lixing  ~/PycharmProjects/MyBlog   master  <span class="built_in">export</span> FLASK_ENV=development</span><br><span class="line">(venv)  lixing  ~/PycharmProjects/MyBlog   master  flask init-db               </span><br><span class="line">Initialized the database.</span><br><span class="line">(venv)  lixing  ~/PycharmProjects/MyBlog   master  flask run</span><br><span class="line"> * Serving Flask app <span class="string">"flaskr"</span> (lazy loading)</span><br><span class="line"> * Environment: development</span><br><span class="line"> * Debug mode: on</span><br><span class="line"> * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)</span><br><span class="line"> * Restarting with <span class="built_in">stat</span></span><br><span class="line"> * Debugger is active!</span><br><span class="line"> * Debugger PIN: 757-386-815</span><br></pre></td></tr></table></figure></li><li><p>后序步骤省略（因为不想贴图了）具体可以去项目地址看：</p><ul><li><a href="https://github.com/jzhmcoo1/MyBlog" target="_blank" rel="noopener">https://github.com/jzhmcoo1/MyBlog</a></li></ul></li></ol><h1 id="七、项目总结"><a href="#七、项目总结" class="headerlink" title="七、项目总结"></a>七、项目总结</h1><ol><li>我遇到的困难<ul><li>这是我第一次自己写小项目，我懂得了从一个需求到具体功能的实现是非常不易的，有的时候思路不对，有的时候是遇到了 bug，这个过程是十分艰辛的。</li><li>我的 web 开发基础非常差，是这个学期现学现卖，而且懂得也太少了，经常会传递错页面的参数，以及页面的布局达不到想要的效果。</li><li>大多数的技术点，Python 库，框架的使用，如果不能查到类似的中文博客实现的话，就只能去看官方文档，往往需要查看英文文档，看着英文头疼往往成了最大的阻碍，只能硬着头皮看。</li></ul></li><li>我的收获<ul><li>非常感谢有这个机会来动手实践，实际操作一下，让我知道了自己的不足，我也收获了自己的第一个小项目。</li><li>培养了我的自学能力和动手能力，并且也锻炼了我的抽象能力和逻辑思维能力。</li><li>知道了不足之后，就用了努力的目标和方向，今后会加强基础，学习web开发框架。</li></ul></li><li>其他<ul><li>作为我的第一个项目，我将它开源到了 Github 上，希望有时间能够多多维护更新<ul><li><a href="https://github.com/jzhmcoo1/MyBlog" target="_blank" rel="noopener">https://github.com/jzhmcoo1/MyBlog</a></li></ul></li></ul></li></ol><h1 id="八、参考文档"><a href="#八、参考文档" class="headerlink" title="八、参考文档"></a>八、参考文档</h1><ul><li><a href="https://dormousehole.readthedocs.io/en/latest/index.html" target="_blank" rel="noopener">欢迎来到 Flask 的世界 — Flask 中文文档（ 1.1.1 ）</a></li><li><a href="https://jinja.palletsprojects.com/en/2.11.x/templates/" target="_blank" rel="noopener">Template Designer Documentation — Jinja Documentation (2.11.x)</a></li><li><a href="https://github.com/Blackyukun/quiet" target="_blank" rel="noopener">Blackyukun/quiet: 支持上传 markdown 文件生成 html 的 flask 静态博客</a></li><li><a href="https://python-markdown.github.io/sitemap.html" target="_blank" rel="noopener">Sitemap — Python-Markdown 3.2.2 documentation</a></li><li><a href="https://juejin.im/entry/5a8d8776f265da4e8b2feac7" target="_blank" rel="noopener">基于flask的静态博客 - 后端 - 掘金</a></li><li><a href="https://valine.js.org/quickstart.html" target="_blank" rel="noopener">快速开始 | Valine 一款快速、简洁且高效的无后端评论系统。</a></li><li><a href="https://themefisher.com/products/kross-creative-portfolio-template/" target="_blank" rel="noopener">kross - bootstrap 前端模版</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> DevNotes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> flask </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Share Some Useful Tools</title>
      <link href="/2020/05/22/app-share-I/"/>
      <url>/2020/05/22/app-share-I/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>第一次写随笔奥，今天就来分享一些好用的小工具/有用的网站吧。</p><hr><h1 id="代码截图生成——Carbon"><a href="#代码截图生成——Carbon" class="headerlink" title="代码截图生成——Carbon"></a>代码截图生成——Carbon</h1><h2 id="简介："><a href="#简介：" class="headerlink" title="简介："></a>简介：</h2><p>carbon 是一个生成代码截图的网站。网站上可以复制进代码，然后返回代码高亮的代码截图图片。可以自定义样式或者使用预定义样式，支持使用 github 登录，这样，自定义样式就能被保存下来了。</p><p>具体可以看：<a href="https://carbon.now.sh/about" target="_blank" rel="noopener">about - carbon</a></p><h2 id="网址："><a href="#网址：" class="headerlink" title="网址："></a>网址：</h2><p><a href="https://carbon.now.sh" target="_blank" rel="noopener">https://carbon.now.sh</a></p><h2 id="截图："><a href="#截图：" class="headerlink" title="截图："></a>截图：</h2><img src= "/img/loading.gif" data-src="https://gitee.com/jzhmcoo1/jzhmcoo1picrepo/raw/master/img/carbon.png" style="zoom:50%;" /><hr><h1 id="画图工具——draw-io"><a href="#画图工具——draw-io" class="headerlink" title="画图工具——draw.io"></a>画图工具——draw.io</h1><h2 id="简介：-1"><a href="#简介：-1" class="headerlink" title="简介："></a>简介：</h2><p>一款开源的、在线的画图工具，支持多种图形，支持分享，支持存储在云盘</p><p>具体可以看介绍：<a href="https://www.diagrams.net" target="_blank" rel="noopener">draw.io介绍</a> ，网站支持简体中文。</p><h2 id="网址：-1"><a href="#网址：-1" class="headerlink" title="网址："></a>网址：</h2><p><a href="https://app.diagrams.net" target="_blank" rel="noopener">https://app.diagrams.net</a></p><h2 id="截图：-1"><a href="#截图：-1" class="headerlink" title="截图："></a>截图：</h2><img src= "/img/loading.gif" data-src="https://gitee.com/jzhmcoo1/jzhmcoo1picrepo/raw/master/img/drawio.png" style="zoom:50%;" /><hr><h1 id="歌单导入——Spot"><a href="#歌单导入——Spot" class="headerlink" title="歌单导入——Spot"></a>歌单导入——Spot</h1><h2 id="简介：-2"><a href="#简介：-2" class="headerlink" title="简介："></a>简介：</h2><p>支持从网易云、QQ、虾米、百度音乐歌单导入到 spotify 中。只需要复制歌单的链接，黏贴进去即可自动导入。</p><h2 id="网站："><a href="#网站：" class="headerlink" title="网站："></a>网站：</h2><p><a href="https://spot.uselesses.com/#/" target="_blank" rel="noopener">https://spot.uselesses.com/#/</a></p><h2 id="截图：-2"><a href="#截图：-2" class="headerlink" title="截图："></a>截图：</h2><p><img src= "/img/loading.gif" data-src="https://gitee.com/jzhmcoo1/jzhmcoo1picrepo/raw/master/img/spotspot.jpg" alt=""></p><hr><h1 id="PDF-文档电子书查找——鸠摩搜书"><a href="#PDF-文档电子书查找——鸠摩搜书" class="headerlink" title="PDF 文档电子书查找——鸠摩搜书"></a>PDF 文档电子书查找——鸠摩搜书</h1><h2 id="简介：-3"><a href="#简介：-3" class="headerlink" title="简介："></a>简介：</h2><p>一个界面简介的搜索 PDF 的网站，资源还是很丰富的</p><p>具体可以看：<a href="https://www.jiumodiary.com/info.php" target="_blank" rel="noopener">Info | Jiumo E-Book Search</a></p><h2 id="网站：-1"><a href="#网站：-1" class="headerlink" title="网站："></a>网站：</h2><p><a href="https://www.jiumodiary.com" target="_blank" rel="noopener">https://www.jiumodiary.com</a></p><h2 id="截图：-3"><a href="#截图：-3" class="headerlink" title="截图："></a>截图：</h2><p><img src= "/img/loading.gif" data-src="https://gitee.com/jzhmcoo1/jzhmcoo1picrepo/raw/master/img/soushu.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> 工具分享 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>The Box Model</title>
      <link href="/2020/05/18/CSS-Box-Model/"/>
      <url>/2020/05/18/CSS-Box-Model/</url>
      
        <content type="html"><![CDATA[<h1 id="Block-and-inline-boxes"><a href="#Block-and-inline-boxes" class="headerlink" title="Block and inline boxes"></a>Block and inline boxes</h1><h2 id="定义为-block："><a href="#定义为-block：" class="headerlink" title="定义为 block："></a>定义为 <code>block</code>：</h2><ul><li>盒子会换行</li><li>盒子会向内联方向延展，填充容器中的可用空间（大多数情况会填满所有空间，和容器大小一样）</li><li><code>width</code>和<code>height</code>属性可以发挥作用</li><li><code>padding</code>,<code>margin</code>,<code>height</code>属性将会把其他元素推离盒子</li><li><code>&lt;p&gt;</code>和所有的标题<code>&lt;h1&gt;</code>等是 <strong>默认采用 block</strong>的</li></ul><h2 id="定义为inline"><a href="#定义为inline" class="headerlink" title="定义为inline:"></a>定义为<code>inline</code>:</h2><ul><li>盒子不会换行</li><li><code>width</code>和<code>height</code>属性将不会起作用</li><li><strong>垂直方向</strong>的<code>padding</code>,<code>margin</code>,<code>border</code>能起作用但不会使得其他<code>inline</code>盒子被推离</li><li><strong>水平方向</strong>的<code>padding</code>,<code>margin</code>,<code>border</code>能起作用并且会推离其他盒子</li><li><code>&lt;a&gt;</code>，<code>&lt;span&gt;</code>,<code>&lt;em&gt;</code>,<code>&lt;strong&gt;</code>都是 <strong>默认采用 inline</strong>显示的</li></ul><hr><h1 id="Aside-Inner-and-outer-display-types"><a href="#Aside-Inner-and-outer-display-types" class="headerlink" title="Aside: Inner and outer display types"></a>Aside: Inner and outer display types</h1><ul><li><p>block 和 inline 都是代表 outer display type</p></li><li><p>Box 的 inner display type 则表示了 box 内部是如何布局的，默认是正常的</p></li><li><p>当我们使用<code>display:flex</code>之类的设置时，外部的显示类型是<code>block</code>，但是内部的显示类型是<code>flex</code>的，此盒子的任何直接子级都将成为<code>flex</code>项目，并且根据 <a href="https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Flexbox" target="_blank" rel="noopener">Flexbox</a> 规则布局。</p></li><li><p><code>block</code>和<code>inline</code>布局都是被视作正常的情况，即没有任何指定时，盒子都是根据这两个来布局的</p></li></ul><p>我自己的理解：</p><p>当盒子被声明为 flex 时，盒子本身是 block 的，对（默认为block的标签来说），而内部的显示为 flex</p><p>当盒子被声明为 inline-flex 时，盒子本身将成为 inline，而内部显示为 flex</p><p>为了确定我看完文档，理解是正确的，不妨我们动手实践一下，修改 mdn 上的代码</p><p>源代码：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>I am a paragraph. A short one.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>Item One<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>Item Two<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>Item Three<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>I am another paragraph. Some of the <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"block"</span>&gt;</span>words<span class="tag">&lt;/<span class="name">span</span>&gt;</span> have been wrapped in a <span class="tag">&lt;<span class="name">span</span>&gt;</span>span element<span class="tag">&lt;/<span class="name">span</span>&gt;</span>.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">p</span>, </span><br><span class="line"><span class="selector-tag">ul</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">2px</span> solid rebeccapurple;</span><br><span class="line">  <span class="attribute">padding</span>: .<span class="number">5em</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.block</span>,</span><br><span class="line"><span class="selector-tag">li</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">2px</span> solid blue;</span><br><span class="line">  <span class="attribute">padding</span>: .<span class="number">5em</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">ul</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">list-style</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.block</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们将代码 14 行<code>display</code>改成<code>inline-flex</code>, （为了查看效果，<code>&lt;p&gt;</code> 默认的是<code>block</code>的，这里显示地更改其为<code>inline</code>)，应该会看到<code>&lt;p&gt;</code>元素与<code>&lt;ul&gt;</code>元素拼入同一行了。</p><p>查看效果对比：</p><p>原来：</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/jzhmcoo1/jzhmcoo1picrepo/raw/master/img/css-box-flex.png" alt=""></p><p>修改完毕：</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/jzhmcoo1/jzhmcoo1picrepo/raw/master/img/css-box-inline-flex.png" alt=""></p><p>虽然显示效果不好，但是的确修改之后，<code>&lt;ul&gt;</code>和<code>&lt;p&gt;</code>元素成为了内联元素，拼接在了同一行了。</p><hr><h1 id="CSS-box-model"><a href="#CSS-box-model" class="headerlink" title="CSS box model"></a>CSS box model</h1><h2 id="标准盒子模型"><a href="#标准盒子模型" class="headerlink" title="标准盒子模型"></a>标准盒子模型</h2><p><img src= "/img/loading.gif" data-src="https://gitee.com/jzhmcoo1/jzhmcoo1picrepo/raw/master/img/box-model.png" alt=""></p><p>这是 block box 模型的图，其中：</p><ul><li>Content box: 作为展示内容的区域，可以通过<code>width</code>和<code>height</code>来调整大小</li><li>Padding box: 位于内容区域的周围空白部分，可以通过<code>padding</code>来调整</li><li>Border box: 边框包围了内容和内边距，通过<code>border</code>和相关属性来调整</li><li>Margin box: 外边距包围了内容，内边距和边框，作为此盒子与其他元素的空白部分，通过<code>margin</code>和相关属性调整</li></ul><h2 id="替代盒子模型"><a href="#替代盒子模型" class="headerlink" title="替代盒子模型"></a>替代盒子模型</h2><p>标准盒子模型的实际宽度是$content.width+2\times padding+2\times border$的结果，同理实际高度</p><p>而这对于计算实际大小是不方便的，因此可以设置为 <strong>替代盒子模型</strong> </p><p>使用了替代盒子模型后，内容区域的实际宽度是：$content.width=width_{real}-2\times padding -2\times border$</p><p>即对盒子显式设置的宽度和高度，就是盒子显示的大小</p><p>通过<code>box-sizing:border-box;</code> 来设置。</p><p>如果需要所有元素都是用替代框盒子，可以设置<code>box-sizing</code>属性，以及将所有其他元素设置为继承该值，如下面的代码片段：</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">html</span> &#123;</span><br><span class="line">  <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">&#125;</span><br><span class="line">*, *<span class="selector-pseudo">::before</span>, *<span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">  <span class="attribute">box-sizing</span>: inherit;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="MDN-上的例子"><a href="#MDN-上的例子" class="headerlink" title="MDN 上的例子"></a>MDN 上的例子</h2><p>通过计算，修改<code>.alternate</code>里的<code>height</code>和<code>width</code>属性分别为<code>240px</code>和<code>390px</code>即可解决</p>]]></content>
      
      
      <categories>
          
          <category> StudyNotes </category>
          
          <category> WebDevelopment </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> CSS </tag>
            
            <tag> The box model </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS selectors I</title>
      <link href="/2020/04/17/CSS-Selectors-I/"/>
      <url>/2020/04/17/CSS-Selectors-I/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本文根据 <a href="https://developer.mozilla.org/zh-CN/docs/Learn/CSS/Building_blocks/Selectors" target="_blank" rel="noopener">MDN文档</a> 进行总结</p></blockquote><hr><h1 id="类型选择器（Type-selectors）"><a href="#类型选择器（Type-selectors）" class="headerlink" title="类型选择器（Type selectors）"></a>类型选择器（Type selectors）</h1><blockquote><p><strong>类型选择器</strong>，也叫“标签名选择器”或“元素选择器”，在文档中选择一个 HTML 标签。</p></blockquote><p>如：</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">span</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: yellow;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">strong</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: rebeccapurple;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">em</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: rebeccapurple;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="全局选择器（Universal-selector）"><a href="#全局选择器（Universal-selector）" class="headerlink" title="全局选择器（Universal selector）"></a>全局选择器（Universal selector）</h1><blockquote><p>全局选择器，是由一个星号（<code>*</code>）代指的，它选中了文档中的所有内容（或者是父元素中的所有内容，比如，它紧随在其他元素以及邻代运算符之后的时候）。</p></blockquote><figure class="highlight css"><table><tr><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="使用全局选择器、让选择器更易读"><a href="#使用全局选择器、让选择器更易读" class="headerlink" title="使用全局选择器、让选择器更易读"></a>使用全局选择器、让选择器更易读</h2><blockquote><p>全局选择器的一种用法是让选择器更易读，更明显地表明它们的作用。</p><p>例如，如果我想选中任何元素的第一子元素，不论它是什么元素，都给它加粗，我可以将<code>:first-child</code>选择器用作元素选择器的一个兄弟选择器：</p></blockquote><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">article</span><span class="selector-pseudo">:first-child</span> &#123;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    select any &lt;article&gt; element that is the first child of another element.</span></span><br><span class="line"><span class="comment">    /*</span></span><br><span class="line"><span class="comment">&#125;</span></span><br></pre></td></tr></table></figure><p>但是这会和<code>article:first-child</code>混淆，而后者选择了作为其他元素的第一子元素的<code>&lt;article&gt;</code>元素。</p><p>为了避免这种混淆，我们可以向<code>:first-child</code>选择器加入全局选择器，这样选择器所做的事情很容易就能看懂。选择器正选中<code>&lt;article&gt;</code>元素的<em>任何</em>第一子元素：</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">article</span> *<span class="selector-pseudo">:first-child</span> &#123; </span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">     选中&lt;article&gt;元素的第一子元素</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="类选择器（Class-selectors）"><a href="#类选择器（Class-selectors）" class="headerlink" title="类选择器（Class selectors）"></a>类选择器（Class selectors）</h1><blockquote><p>类选择器以一个句点（<code>.</code>）开头，会选择文档中应用了这个类的所有物件。</p></blockquote><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">选中所有类为 highlight 的标签</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="selector-class">.highlight</span>&#123;</span><br><span class="line">     <span class="attribute">background-color</span>: yellow;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="指向特点元素的类"><a href="#指向特点元素的类" class="headerlink" title="指向特点元素的类"></a>指向特点元素的类</h2><blockquote><p>You can create a selector that will target specific elements with the class applied. </p></blockquote><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">选中类为 hightlight 的 span 元素</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="selector-tag">span</span><span class="selector-class">.highlight</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: yellow;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">选中类为 hightlight 的 h1 元素</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="selector-tag">h1</span><span class="selector-class">.highlight</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: pink;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="多个类被应用的时候指向一个元素"><a href="#多个类被应用的时候指向一个元素" class="headerlink" title="多个类被应用的时候指向一个元素"></a>多个类被应用的时候指向一个元素</h2><p>你能对一个元素应用多个类，然后分别指向它们，或者仅仅在选择器中存在所有这些类的时候选择这一元素。在你的站点上，构建可以以不同方式组合起来的组件的时候，这会有用。为了告诉浏览器我们只想匹配带有所有这些类的元素，我们可以将这些类不加空格地连成一串。</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.notebox</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">4px</span> solid <span class="number">#666</span>;</span><br><span class="line">    <span class="attribute">padding</span>: .<span class="number">5em</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.notebox</span><span class="selector-class">.warning</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">4px</span> solid orange;</span><br><span class="line">    <span class="attribute">font-weight</span>: bold;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.notebox</span><span class="selector-class">.danger</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">4px</span> solid red;</span><br><span class="line">    <span class="attribute">font-weight</span>: bold;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"notebox"</span>&gt;</span></span><br><span class="line">    This is an informational note.</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"notebox warning"</span>&gt;</span></span><br><span class="line">    This note shows a warning.</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"notebox danger"</span>&gt;</span></span><br><span class="line">    This note shows danger!</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><h1 id="ID-选择器（ID-selector）"><a href="#ID-选择器（ID-selector）" class="headerlink" title="ID 选择器（ID selector）"></a>ID 选择器（ID selector）</h1><p>ID选择器开头为<code>#</code>而非句点，不过基本上和类选择器是同种用法。可是在一篇文档中，一个ID只会用到一次。它能选中设定了<code>id</code>的元素，你能把ID放在类型选择器之前，只指向元素和ID都匹配的类。</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">选择 id=one 的标签</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="selector-id">#one</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: yellow;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">选择 id=heading 的 h1 标签</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="selector-tag">h1</span><span class="selector-id">#heading</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: rebeccapurple;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="属性选择器（Attribute-selectors）"><a href="#属性选择器（Attribute-selectors）" class="headerlink" title="属性选择器（Attribute selectors）"></a>属性选择器（Attribute selectors）</h1><h2 id="存在和值选择器（Presence-and-value-selectors）"><a href="#存在和值选择器（Presence-and-value-selectors）" class="headerlink" title="存在和值选择器（Presence and value selectors）"></a>存在和值选择器（Presence and value selectors）</h2><blockquote><p>These selectors enable the selection of an element based on the presence of an attribute alone (for example <code>href</code>), or on various different matches against the value of the attribute.</p></blockquote><table><thead><tr><th align="center">选择器</th><th align="center">示例</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center"><code>[attr]</code></td><td align="center"><code>a[title]</code></td><td align="center">匹配带有一个名为 <em>attr</em>的属性元素</td></tr><tr><td align="center"><code>[attr=value]</code></td><td align="center"><code>a[href=&quot;https://example.com&quot;]</code></td><td align="center">匹配带有一个名为 attr 且其值恰好为 value 的元素</td></tr><tr><td align="center"><code>[attr~=value]</code></td><td align="center"><code>p[class~=&quot;special&quot;]</code></td><td align="center">匹配具有 attr 属性的元素，且其值恰好是 value 或者在其（空格分隔）的值列表中包含 value</td></tr><tr><td align="center"><code>[attr</code>&#124;<code>=value]</code></td><td align="center"><code>div[lang</code>&#124;<code>=&#39;zh&#39;]</code></td><td align="center">匹配具有attr 属性的元素，该属性的值恰好是 value 或者以 value 开头，后跟连字符</td></tr></tbody></table><h3 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">li</span><span class="selector-attr">[class]</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">200%</span>;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    匹配带有 class 属性的 li 元素</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">li</span><span class="selector-attr">[class=<span class="string">"a"</span>]</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: yellow;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    匹配带有值恰好为"a"的 class 属性的 li 元素</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">li</span><span class="selector-attr">[class~=<span class="string">"a"</span>]</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    匹配带有值恰好为"a"或值列表中包含"a"的 li 元素</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Attribute presence and value selectors<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>Item 1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"a"</span>&gt;</span>Item 2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"a b"</span>&gt;</span>Item 3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"ab"</span>&gt;</span>Item 4<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>By using <code>li[class]</code> we can match any selector with a class attribute. This matches all but the first list item.</li><li><code>li[class=&quot;a&quot;]</code> matches a selector with a class of <code>a</code>, but not a selector with a class of <code>a</code> with another space-separated class as part of the value. It selects the second list item.</li><li><code>li[class~=&quot;a&quot;]</code> will match a class of <code>a</code> but also a value that contains the class of <code>a</code>as part of a whitespace-separated list. It selects the second and third list items.</li></ul><hr><h2 id="子串匹配选择器（Substring-matching-selectors）"><a href="#子串匹配选择器（Substring-matching-selectors）" class="headerlink" title="子串匹配选择器（Substring matching selectors）"></a>子串匹配选择器（Substring matching selectors）</h2><blockquote><p>These selectors allow for more advanced matching of substrings inside the value of your attribute. For example, if you had classes of <code>box-warning</code> and <code>box-error</code> and wanted to match everything that started with the string “box-“, you could use <code>[class^=&quot;box-&quot;]</code> to select them both (or <code>[class|=&quot;box&quot;]</code> as described in section above).</p></blockquote><table><thead><tr><th align="center">Selector</th><th align="center">Example</th><th>Description</th></tr></thead><tbody><tr><td align="center"><code>[attr^=value]</code></td><td align="center"><code>li[class^=&quot;box-&quot;]</code></td><td>匹配具有 <em>attr</em> 属性（其名称是方括号中的值）的元素，该属性的值以 <em>value</em> 开头</td></tr><tr><td align="center"><code>[attr$=value]</code></td><td align="center"><code>li[class$=&quot;-box&quot;]</code></td><td>匹配具有 <em>attr</em>属性（其值以 value 结尾）的元素</td></tr><tr><td align="center"><code>[attr*=value]</code></td><td align="center"><code>li[class*=&quot;box&quot;]</code></td><td>匹配具有 <em>attr</em> 属性的元素，该属性在字符串中的任何位置都含有该值</td></tr></tbody></table><p>(Aside: It may help to note that <code>^</code> and <code>$</code> have long been used as <em>anchors</em> in so-called <em>regular expressions</em> to mean <em>begins with</em> and <em>ends with</em>.)（正则表达式的开头和结尾）</p><h3 id="Example-1"><a href="#Example-1" class="headerlink" title="Example"></a>Example</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">li</span><span class="selector-attr">[class^=<span class="string">"a"</span>]</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">200%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">li</span><span class="selector-attr">[class$=<span class="string">"a"</span>]</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: yellow;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">li</span><span class="selector-attr">[class*=<span class="string">"a"</span>]</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Attribute substring matching selectors<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"a"</span>&gt;</span>Item 1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"ab"</span>&gt;</span>Item 2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"bca"</span>&gt;</span>Item 3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"bcabc"</span>&gt;</span>Item 4<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><code>li[class^=&quot;a&quot;]</code> matches any attribute value which starts with <code>a</code>, so matches the first two list items.</li><li><code>li[class$=&quot;a&quot;]</code> matches any attribute value that ends with <code>a</code>, so matches the first and third list item.</li><li><code>li[class*=&quot;a&quot;]</code> matches any attribute value where <code>a</code> appears anywhere in the string, so it matches all of our list items.</li></ul><hr><h2 id="区分大小写（Case-sensitivity）"><a href="#区分大小写（Case-sensitivity）" class="headerlink" title="区分大小写（Case-sensitivity）"></a>区分大小写（Case-sensitivity）</h2><blockquote><p>If you want to match attribute values case-insensitively you can use the value <code>i</code> before the closing bracket. This flag tells the browser to match ASCII characters case-insensitively. Without the flag the values will be matched according to the case-sensitivity of the document language — in HTML’s case it will be case sensitive.（使用<code>i</code>来使大小写不明感）</p></blockquote><h3 id="Example-2"><a href="#Example-2" class="headerlink" title="Example"></a>Example</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">li</span><span class="selector-attr">[class^=<span class="string">"a"</span>]</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: yellow;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    it only matches the first list item because the other two list items start with an uppercase A</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">li</span><span class="selector-attr">[class^=<span class="string">"a"</span> i]</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    The second selector uses the case-insensitive flag and so matches all of the list items.</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Case-insensitivity<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"a"</span>&gt;</span>Item 1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"A"</span>&gt;</span>Item 2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"Ab"</span>&gt;</span>Item 3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> StudyNotes </category>
          
          <category> WebDevelopment </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS selectors </tag>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Document and website structure</title>
      <link href="/2020/04/01/Document-and-website-structure/"/>
      <url>/2020/04/01/Document-and-website-structure/</url>
      
        <content type="html"><![CDATA[<h1 id="Document-and-website-structure"><a href="#Document-and-website-structure" class="headerlink" title="Document and website structure"></a>Document and website structure</h1><h2 id="Written-in-front"><a href="#Written-in-front" class="headerlink" title="Written in front"></a>Written in front</h2><p>Recently, I’ve been reading this article. And I  just started learning HTML . I don’t know much about HTML tags, and liked using <code>&lt;div&gt;</code>s a lot, which made me almost crazy maintaining my website. </p><p>The article is great. It’s easy for me, a greenhorn in web development to understand. It clearly tells the functions of these tags, and when to use it. I read the English version on <a href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Introduction_to_HTML/Document_and_website_structure" target="_blank" rel="noopener">MDN</a>, and make some note in it for better understanding, and for learning English.</p><blockquote><p>Original Article:  <a href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Introduction_to_HTML/Document_and_website_structure" target="_blank" rel="noopener">MDN</a></p></blockquote><hr><blockquote><p>In addition to defining individual parts of your page (such as “a paragrapgh” or “an image”),</p><p>HTML also boasts a number of block level elements used to define areas of your website (such as “the header”, “the navigation menu”, “the main content column”).</p><p>This article looks into how to plan a basic website struture, and write the HTML to represent this structure.</p></blockquote><h2 id="Basic-section-of-a-document"><a href="#Basic-section-of-a-document" class="headerlink" title="Basic section of a document"></a>Basic section of a document</h2><p>Webpages can and will look pretty different from one another, but they all tend to share similar standard components, unless the page is displaying a fullscreen video or game, is part of some kind of art project, or is just badly structured.</p><ul><li>header</li><li>navigation bar</li><li>Main content</li><li>sidebar</li><li>footer</li></ul><h3 id="header"><a href="#header" class="headerlink" title="header"></a>header</h3><p>Usually a big strip across the top with a big heading, logo, and perhaps a ==tagline（品牌口号标语）==. This usually stays the same from one webpage to another.</p><h3 id="navigation-bar"><a href="#navigation-bar" class="headerlink" title="navigation bar:"></a>navigation bar:</h3><p>Links to the site’s main sections; usually represented by menu buttons, links, or tabs. Like the header, this content usually remains consistent from one webpage to another — having inconsistent navigation on your website will just lead to confused, frustrated users. </p><h3 id="Main-content"><a href="#Main-content" class="headerlink" title="Main content"></a>Main content</h3><p>A big area in the center that contains most of the unique content of a given webpage, for example, the video you want to watch, or the main story you’re reading, or the map you want to view, or the news headlines, etc. This is the one part of the website that definitely will vary from page to page!</p><h3 id="Sidebar"><a href="#Sidebar" class="headerlink" title="Sidebar"></a>Sidebar</h3><p>Some ==peripheral（外部的）== info, links, quotes, ads, etc. Usually, this is contextual to what is contained in the main content (for example on a news article page, the sidebar might contain the author’s bio, or links to related articles) but there are also cases where you’ll find some recurring elements like a secondary navigation system.</p><h3 id="Footer"><a href="#Footer" class="headerlink" title="Footer"></a>Footer</h3><p>A strip across the bottom of the page that generally contains fine print, copyright notices, or contact info. It’s a place to put common information (like the header) but usually, that information is not critical or secondary to the website itself. The footer is also sometimes used for SEO purposes, by providing links for quick access to popular content.</p><h2 id="HTML-for-structuring-content"><a href="#HTML-for-structuring-content" class="headerlink" title="HTML for structuring content"></a>HTML for structuring content</h2><p>With the right CSS, you could use pretty much any elements to wrap around the different sections and get it looking how you wanted, but as discussed before, we need to respect ==semantics（语义）== and <strong>use the right element for the right job</strong>.</p><p>This is because visuals don’t tell the whole story. We use color and font size to draw sighted users’ attention to the most useful parts of the content, like the navigation menu and related links, but what about ==visually impaired people(视障者)== for example, who might not find concepts like “pink” and “large font” very useful?</p><p>In your HTML code, you can mark up sections of content based on their <em>functionality</em> — you can use elements that represent the sections of content described above ==unambiguously（明确地）==, and ==assistive（辅助的）== technologies like screenreaders can recognise those elements and help with tasks like “find the main navigation”, or “find the main content.” As we mentioned earlier in the course, there are a number of <a href="https://developer.mozilla.org/en-US/Learn/HTML/Introduction_to_HTML/HTML_text_fundamentals#Why_do_we_need_structure" target="_blank" rel="noopener">consequences of not using the right element structure and semantics for the right job</a>.</p><p>To implement such semantic mark up, HTML provides dedicated tags that you can use to represent such sections, for example:</p><ul><li><strong>header:</strong><code>&lt;header&gt;</code></li><li><strong>navigation bar:</strong><code>&lt;nav&gt;</code></li><li><strong>main content</strong>:<code>&lt;main&gt;</code>, with various content ==subsections（小节）== represented by <code>&lt;article&gt;</code>, <code>&lt;section&gt;</code>, and <code>&lt;div&gt;</code> elements.</li><li><strong>sidebar:</strong><code>&lt;aside&gt;</code>, often placed inside <code>&lt;main&gt;</code>.</li><li><strong>footer:</strong><code>&lt;footer&gt;</code>.</li></ul><blockquote><p>An example</p></blockquote><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>My page title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"https://fonts.googleapis.com/css?family=Open+Sans+Condensed:300|Sonsie+One"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"style.css"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- the below three lines are a fix to get HTML5 semantic elements working in old versions of Internet Explorer--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--[if lt IE 9]&gt;</span></span><br><span class="line"><span class="comment">      &lt;script src="https://cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv.js"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="comment">    &lt;![endif]--&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Here is our main header that is used across all the pages of our website --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">header</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Header<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">nav</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Home<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Our team<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Projects<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Contact<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">       <span class="comment">&lt;!-- A Search form is another commmon non-linear way to navigate through a website. --&gt;</span></span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"search"</span> <span class="attr">name</span>=<span class="string">"q"</span> <span class="attr">placeholder</span>=<span class="string">"Search query"</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"Go!"</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Here is our page's main content --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">main</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">&lt;!-- It contains an article --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">article</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Article heading<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Donec a diam lectus. Set sit amet ipsum mauris. Maecenas congue ligula as quam viverra nec consectetur ant hendrerit. Donec et mollis dolor. Praesent et diam eget libero egestas mattis sit amet vitae augue. Nam tincidunt congue enim, ut porta lorem lacinia consectetur.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span>Subsection<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>Donec ut librero sed accu vehicula ultricies a non tortor. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aenean ut gravida lorem. Ut turpis felis, pulvinar a semper sed, adipiscing id dolor.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>Pelientesque auctor nisi id magna consequat sagittis. Curabitur dapibus, enim sit amet elit pharetra tincidunt feugiat nist imperdiet. Ut convallis libero in urna ultrices accumsan. Donec sed odio eros.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span>Another subsection<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>Donec viverra mi quis quam pulvinar at malesuada arcu rhoncus. Cum soclis natoque penatibus et manis dis parturient montes, nascetur ridiculus mus. In rutrum accumsan ultricies. Mauris vitae nisi at sem facilisis semper ac in est.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>Vivamus fermentum semper porta. Nunc diam velit, adipscing ut tristique vitae sagittis vel odio. Maecenas convallis ullamcorper ultricied. Curabitur ornare, ligula semper consectetur sagittis, nisi diam iaculis velit, is fringille sem nunc vet mi.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">article</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">&lt;!-- the aside content can also be nested within the main content --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">aside</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Related<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Oh I do like to be beside the seaside<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Oh I do like to be beside the sea<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Although in the North of England<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>It never stops raining<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Oh well...<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">aside</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">main</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- And here is our main footer that is used across all the pages of our website --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">footer</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>©Copyright 2050 by nobody. All rights reversed.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>We aren’t asking you to do much else in this article, because <strong>the key to understanding document layout is writing a sound HTML structure, and then laying it out with CSS.</strong> </p><h2 id="HTML-layout-elements-in-more-detail"><a href="#HTML-layout-elements-in-more-detail" class="headerlink" title="HTML layout elements in more detail"></a>HTML layout elements in more detail</h2><ul><li><p><code>&lt;main&gt;</code> is for content <em>unique to this page</em>. Use <code>&lt;main&gt;</code> only once per page, and put it directly inside <code>&lt;body&gt;</code>. Ideally this shouldn’t be nested within other elements.</p></li><li><p><code>&lt;article&gt;</code> encloses a block of related content that makes sense on its own without the rest of the page (e.g., a single blog post).</p></li><li><p><code>&lt;section&gt;</code> is similar to <code>&lt;article&gt;</code>, but it is more for grouping together a single part of the page that ==constitutes one single piece of functionality== (e.g., a mini map, or a set of article headlines and summaries). It’s considered best practice to begin each section with a heading; also note that you can break <code>&lt;article&gt;</code>s up into different <code>&lt;section&gt;</code>s, or <code>&lt;section&gt;</code>s up into different <code>&lt;article&gt;</code>s,depending on the context.</p></li><li><p><code>&lt;aside&gt;</code> contains content that is not directly related to the main content but can provide addtional information indirectly related to it (==glossary entries(词汇表条目)==, ==author biography(作者传记)==, related links, etc.).</p></li><li><p><code>&lt;header&gt;</code> represents a group of introductory content. If it is a child of <code>&lt;body&gt;</code> it defines the global header of a webpage, but if it’s a child of an <code>&lt;article&gt;</code> or <code>&lt;section&gt;</code> it defines a specific header for that section (try not to confuse this with titles and headings).</p></li><li><p><code>&lt;nav&gt;</code> contains the main navigation functionally for the page.</p><p>  Secondary links, etc., would not go in the navigation.</p></li><li><p><code>&lt;footer&gt;</code>represents a group of end content for a page.</p></li></ul><h2 id="Non-semantic-wrappers"><a href="#Non-semantic-wrappers" class="headerlink" title="Non-semantic wrappers"></a>Non-semantic wrappers</h2><p>Sometimes you’ll come across a situation where you can’t find an ideal semantic element to group some items together or wrap some content. Sometimes you might want to just group a set of elements together to affect them all as a single entity with some CSS or JavaScript. For cases like these, HTML provides the <code>&lt;div&gt;</code> and <code>&lt;span&gt;</code> elements. You should use these preferably with a suitable class attribute, to provide some kind of label for them so they can be easily targeted.</p><p><code>&lt;span&gt;</code>  is an inline non-semantic element, which you should only use if you can’t think of a better semantic text element to wrap your content, or don’t want to add any specific meaning. For example:</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>The King walked drunkenly back to his room at 01:00, the beer doing nothing to aid</span><br><span class="line">him as he staggered through the door <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"editor-note"</span>&gt;</span>[Editor's note: At this point in the</span><br><span class="line">play, the lights should be down low]<span class="tag">&lt;/<span class="name">span</span>&gt;</span>.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>In this case, the editor’s note is supposed to merely provide extra direction for the director of the play; it is not supposed to have extra semantic meaning. For sighted users, CSS would perhaps be used to distance the note slightly from the main text.</p><p><code>&lt;div&gt;</code> is a block level non-semantic element, which you should only use if you can’t think of a better semantic block element to use, or don’t want to add any specific meaning. For example, imagine a shopping cart widget that you could choose to pull up at any point during your time on an e-commerce site:</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"shopping-cart"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Shopping cart<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span>Silver earrings<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>: $99.95.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../products/3333-0985/thumb.png"</span> <span class="attr">alt</span>=<span class="string">"Silver earrings"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">      ...</span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>Total cost: $237.89<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>This isn’t really an <code>&lt;aside&gt;</code>, as it doesn’t necessarily relate to the main content of the page (you want it viewable from anywhere). It doesn’t even particularly warrant using a <code>&lt;section&gt;</code>, as it isn’t part of the main content of the page. So a <code>&lt;div&gt;</code> is fine in this case. </p><blockquote><p><strong>Warning</strong>: Divs are so convenient to use that it’s easy to use them too much. As they carry no semantic value, they just ==clutter(混乱）== your HTML code. Take care to use them only when there is no better semantic solution and try to reduce their usage to the minimum otherwise you’ll have a hard time updating and maintaining your documents.</p></blockquote><h2 id="Line-breaks-and-horizontal-rules"><a href="#Line-breaks-and-horizontal-rules" class="headerlink" title="Line breaks and horizontal rules"></a>Line breaks and horizontal rules</h2><p>Two elements that you’ll use occasionally and will want to know about are <code>&lt;br&gt;</code> and <code>&lt;hr&gt;</code>:</p><p><code>&lt;br&gt;</code> creates a line break in a paragraph; it is the only way to force a ==rigid structure（刚性结构）== in a situation where you want a series of fixed short lines, such as in a postal address or a poem. For example:</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>There once was a man named O'Dell<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">Who loved to write HTML<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">But his structure was bad, his semantics were sad<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">and his markup didn't read very well.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Without the <code>&lt;br&gt;</code> elements, the paragraph would just be rendered in one long line (HTML ignores most whitespace); with <code>&lt;br&gt;</code> elements in the code, the markup renders like this:</p><blockquote><p>There once was a man named O’Dell<br>Who loved to write HTML<br>But his structure was bad, his semantics were sad<br>and his markup didn’t read very well.</p></blockquote><p><code>&lt;hr&gt;</code> elements create a horizontal rule in the document that ==denotes a thematic change（表示主题变化）== in the text (such as a change in topic or scene)。</p><h2 id="Planning-a-simple-website"><a href="#Planning-a-simple-website" class="headerlink" title="Planning a simple website"></a>Planning a simple website</h2><p>Once you’ve planned out the structure of a simple webpage, the next logical step is to try to work out what content you want to put on a whole website, what pages you need, and how they should be arranged and link to one another for the best possible user experience. This is called <a href="https://developer.mozilla.org/en-US/docs/Glossary/Information_architecture" target="_blank" rel="noopener">Information architecture</a>. In a large, complex website, a lot of planning can go into this process, but for a simple website of a few pages, this can be fairly simple, and fun!</p><ol><li>Bear in mind that you’ll have a few elements common to most (if not all) pages — such as the navigation menu, and the footer content. If your site is for a business, for example, it’s a good idea to have your contact information available in the footer on each page. Note down what you want to have common to every page.</li><li>Next, draw a rough sketch of what you might want the structure of each page to look like (it might look like our simple website above). Note what each block is going to be.</li><li>Now, brainstorm all the other (not common to every page) content you want to have on your website — write a big list down.</li><li>Next, try to sort all these content items into groups, to give you an idea of what parts might ==live together on different pages（在不同页面上一起显示）==. This is very similar to a technique called <a href="https://developer.mozilla.org/en-US/docs/Glossary/Card_sorting" target="_blank" rel="noopener">Card sorting</a>.(卡片分类)</li><li>Now try to sketch a rough sitemap — have a bubble for each page on your site, and draw lines to show the typical workflow between pages. The homepage will probably be in the center, and link to most if not all of the others; most of the pages in a small site should be available from the main navigation, although there are exceptions. You might also want to include notes about how things might be presented.</li></ol>]]></content>
      
      
      <categories>
          
          <category> StudyNotes </category>
          
          <category> WebDevelopment </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> Document structure </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>简单的Markdown语法总结</title>
      <link href="/2020/03/10/Simple-Markdown-Syntax/"/>
      <url>/2020/03/10/Simple-Markdown-Syntax/</url>
      
        <content type="html"><![CDATA[<h1 id="1-写在前面"><a href="#1-写在前面" class="headerlink" title="1. 写在前面"></a>1. 写在前面</h1><p>刚开始写博, 对md的语法还不熟悉, 决定先整理一下md的<strong>basic syntax</strong>.</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><blockquote><p><a href="https://www.markdownguide.org/basic-syntax/" target="_blank" rel="noopener">markdownguide.org</a></p></blockquote><a id="more"></a><h1 id="2-文章标题Headings"><a href="#2-文章标题Headings" class="headerlink" title="2. 文章标题Headings"></a>2. 文章标题Headings</h1><p>创建标题只需要使用’#’, 使用几个’#’就对应了几级标题.</p><figure class="highlight md"><table><tr><td class="code"><pre><span class="line"><span class="section"># heading level1</span></span><br><span class="line"><span class="section">## heading level2</span></span><br><span class="line"><span class="section">### heading level3</span></span><br><span class="line"><span class="section">#### heading level4</span></span><br><span class="line"><span class="section">##### heading level5</span></span><br><span class="line"><span class="section">###### heading level6</span></span><br></pre></td></tr></table></figure><br><p>效果如下:<img src= "/img/loading.gif" data-src="https://gitee.com/jzhmcoo1/jzhmcoo1picrepo/raw/master/img/headings.png" alt="headings"></p><h1 id="3-文章段落-Paragraphs"><a href="#3-文章段落-Paragraphs" class="headerlink" title="3. 文章段落 Paragraphs"></a>3. 文章段落 Paragraphs</h1><p>要创建段落,使用空白行分隔一行或多行文本</p><figure class="highlight md"><table><tr><td class="code"><pre><span class="line">I really like using Markdown.</span><br><span class="line"></span><br><span class="line">I think I'll use it to write my blog online.</span><br></pre></td></tr></table></figure><br><p>效果如下:</p><p>I really like using Markdown.</p><p>I think I’ll use it to write blogs online.</p><h1 id="4-换行-Line-Breaks"><a href="#4-换行-Line-Breaks" class="headerlink" title="4. 换行 Line Breaks"></a>4. 换行 Line Breaks</h1><p>换行时,在行位打<strong>两个或以上</strong>的空格符,然后按下回车.   </p><figure class="highlight md"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="comment">&lt;!--请注意区别--&gt;</span></span></span><br><span class="line">1.This is the first line.      <span class="xml"><span class="comment">&lt;!--此处行末有多个空格&gt;</span></span></span><br><span class="line">And this is the second line.</span><br><span class="line"></span><br><span class="line">2.This is the first line.<span class="xml"><span class="comment">&lt;!--此处行末无空格&gt;</span></span></span><br><span class="line">And this is still at the first line.</span><br><span class="line"></span><br><span class="line">3.This is the first line. <span class="xml"><span class="comment">&lt;!--此处行末有一个空格&gt;</span></span></span><br><span class="line">And this is also at the first line.</span><br></pre></td></tr></table></figure><p>效果如下:<br>1.This is the first line.<br>And this is the second line.</p><p>2.This is the first line.And this is still at the first line.</p><p>3.This is the first line.And this is also at the first line.</p><blockquote><p>这里在博客的实际输出效果可能不一样, 与config文件中marked.gfm属性有关<br>详见<a href="https://github.com/hexojs/hexo/issues/2200" target="_blank" rel="noopener">Github/hexojs/hexo/Issue#2200</a></p></blockquote><h1 id="5-强调-Emphasis"><a href="#5-强调-Emphasis" class="headerlink" title="5. 强调 Emphasis"></a>5. 强调 Emphasis</h1><p>为了强调文本,可以使用加粗/斜体</p><p>加粗为      <code>**想要加粗的内容**</code><br>斜体为      <code>*想要斜体的内容*</code><br>粗体+斜体为  <code>***内容***</code>   </p><p>效果如下:    </p><p><strong>Bold Text</strong></p><p><em>Italic Text</em></p><p><strong><em>Both</em></strong>   </p><blockquote><p><a href="https://www.markdownguide.org/basic-syntax/#emphasis" target="_blank" rel="noopener">参考文档</a> 上不推荐使用下划线的方式, 这里就不整理进去了.</p></blockquote><h1 id="6-块引用-Blockquotes"><a href="#6-块引用-Blockquotes" class="headerlink" title="6. 块引用 Blockquotes"></a>6. 块引用 Blockquotes</h1><h2 id="6-1-块引用"><a href="#6-1-块引用" class="headerlink" title="6.1 块引用"></a>6.1 块引用</h2><p>在行首使用 <code>&gt;</code> 符号进行块引用</p><p><code>&gt; 这是引用,效果看上去是这样子的.</code></p><p>效果如下</p><blockquote><p>这是引用, 效果看上去是这样子的.</p></blockquote><h2 id="6-2-多行块引用-Blockqutos-with-Multiple-Paragrapgs"><a href="#6-2-多行块引用-Blockqutos-with-Multiple-Paragrapgs" class="headerlink" title="6.2 多行块引用 Blockqutos with Multiple Paragrapgs"></a>6.2 多行块引用 Blockqutos with Multiple Paragrapgs</h2><p>只需要在每行开头使用 <code>&gt;</code> </p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt;块</span><br><span class="line">&gt;引</span><br><span class="line">&gt;用</span><br></pre></td></tr></table></figure><blockquote><p>块<br>引<br>用    </p></blockquote><h2 id="6-3-嵌套块引用-Nested-Blockquotes"><a href="#6-3-嵌套块引用-Nested-Blockquotes" class="headerlink" title="6.3 嵌套块引用 Nested Blockquotes"></a>6.3 嵌套块引用 Nested Blockquotes</h2><p>使用多个 <code>&gt;</code> 来实现嵌套引用</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt;这</span><br><span class="line">&gt;&gt;是</span><br><span class="line">&gt;&gt;&gt;嵌套</span><br><span class="line">&gt;&gt;&gt;&gt;引用</span><br></pre></td></tr></table></figure><blockquote><p>这</p><blockquote><p>是</p><blockquote><p>嵌套</p><blockquote><p>引用</p></blockquote></blockquote></blockquote></blockquote><h2 id="6-4-引用中嵌套其他md元素"><a href="#6-4-引用中嵌套其他md元素" class="headerlink" title="6.4 引用中嵌套其他md元素"></a>6.4 引用中嵌套其他md元素</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt; #### The quarterly results look great!</span><br><span class="line">&gt;</span><br><span class="line">&gt; - Revenue was off the chart.</span><br><span class="line">&gt; - Profits were higher than ever.</span><br><span class="line">&gt;</span><br><span class="line">&gt;  *Everything* is going according to **plan**.</span><br></pre></td></tr></table></figure><blockquote><h4 id="The-quarterly-results-look-great"><a href="#The-quarterly-results-look-great" class="headerlink" title="The quarterly results look great!"></a>The quarterly results look great!</h4><ul><li><p>Revenue was off the chart.</p></li><li><p>Profits were higher than ever.</p><p><em>Everything</em> is going according to <strong>plan</strong>.</p></li></ul></blockquote><h1 id="7-列表-Lists"><a href="#7-列表-Lists" class="headerlink" title="7. 列表 Lists"></a>7. 列表 Lists</h1><p>用来组织一系列项目,可以是有序/无序的</p><h2 id="7-1-有序列表-Ordered-List"><a href="#7-1-有序列表-Ordered-List" class="headerlink" title="7.1 有序列表 Ordered List"></a>7.1 有序列表 Ordered List</h2><p>直接使用 <code>&lt;数字&gt; + &lt;.&gt; + &lt;物品&gt;</code> 的形式</p><figure class="highlight md"><table><tr><td class="code"><pre><span class="line"><span class="bullet">1. </span>first item</span><br><span class="line"><span class="bullet">2. </span>seconde item</span><br><span class="line"><span class="bullet">3. </span>third item</span><br></pre></td></tr></table></figure><p>效果如下:</p><ol><li>first item</li><li>seconde item</li><li>third item</li></ol><p>神奇的是,你xjb编号,实际的效果序号还是正确的<br>但要注意列表的开头一项必须为<code>1.</code></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1. first</span><br><span class="line">8. eighth</span><br><span class="line">4. fourth</span><br></pre></td></tr></table></figure><p>效果如下:</p><ol><li>first</li><li>eighth</li><li>fourth</li></ol><p>列表中还能嵌套子列表</p><figure class="highlight md"><table><tr><td class="code"><pre><span class="line"><span class="bullet">1. </span>first</span><br><span class="line"><span class="bullet">2. </span>second</span><br><span class="line"><span class="bullet">    - </span>hhh</span><br><span class="line"><span class="bullet">    - </span>233</span><br></pre></td></tr></table></figure><ol><li>first</li><li>second<ul><li>hhh</li><li>233</li></ul></li></ol><h2 id="7-2-无序列表-Unordered-Lists"><a href="#7-2-无序列表-Unordered-Lists" class="headerlink" title="7.2 无序列表 Unordered Lists"></a>7.2 无序列表 Unordered Lists</h2><p>项目名称前面可以使用 <code>-</code>,<code>*</code>,<code>+</code> 效果都是一样的,并且和有序列表一样也能嵌套</p><figure class="highlight md"><table><tr><td class="code"><pre><span class="line"><span class="bullet">- </span>first item</span><br><span class="line"><span class="bullet">+ </span>second item</span><br><span class="line"><span class="bullet">- </span>third item</span><br><span class="line"><span class="bullet">* </span>fourth item</span><br><span class="line"><span class="bullet">    - </span>indented item</span><br><span class="line"><span class="bullet">    - </span>indented item</span><br></pre></td></tr></table></figure><ul><li>first item</li></ul><ul><li>second item</li></ul><ul><li>third item</li></ul><ul><li>fourth item<ul><li>indented item</li><li>indented item</li></ul></li></ul><h2 id="7-3-在列表中添加其他元素-Adding-Elements-in-Lists"><a href="#7-3-在列表中添加其他元素-Adding-Elements-in-Lists" class="headerlink" title="7.3 在列表中添加其他元素 Adding Elements in Lists"></a>7.3 在列表中添加其他元素 Adding Elements in Lists</h2><p>添加元素时,为了保证列表还是延续的, 需要在元素前添加4个空格或者1个tab</p><figure class="highlight md"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-  </span>This is the first list item.      </span><br><span class="line"><span class="bullet">-  </span>Here's the second list item.</span><br><span class="line"></span><br><span class="line"><span class="code">    I need to add another paragraph below the second list item</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-  </span>And here's the third list item.</span><br></pre></td></tr></table></figure><ul><li><p>This is the first list item.      </p></li><li><p>Here’s the second list item.           </p><p> I need to add another paragraph below the second list item</p></li><li><p>And here’s the third list item.</p></li></ul><p>需要注意的是,在列表中嵌入<strong>代码块</strong>,需要比平常多4个空格,也就是8个空格</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">1.  Open the file.</span><br><span class="line">2.  Find the following code block on line 21:</span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">title</span>&gt;</span>Test<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">3.  Update the title to match the name of your website.</span><br></pre></td></tr></table></figure><p>效果如下:</p><ol><li><p>Open the file.</p></li><li><p>Find the following code block on line 21:</p><pre><code>&lt;html&gt;    &lt;head&gt;    &lt;title&gt;Test&lt;/title&gt;    &lt;/head&gt;&lt;/html&gt;</code></pre></li><li><p>Update the title to match the name of your website.</p></li></ol><h1 id="8-代码-Code"><a href="#8-代码-Code" class="headerlink" title="8. 代码 Code"></a>8. 代码 Code</h1><h2 id="8-1-单行代码"><a href="#8-1-单行代码" class="headerlink" title="8.1 单行代码"></a>8.1 单行代码</h2><p>用一对反单引号把文本包含起来(`)</p><figure class="highlight md"><table><tr><td class="code"><pre><span class="line"><span class="code">`x = x + 1`</span></span><br></pre></td></tr></table></figure><p>效果如下:</p><p><code>x = x + 1</code></p><h2 id="8-2-多行代码"><a href="#8-2-多行代码" class="headerlink" title="8.2 多行代码"></a>8.2 多行代码</h2><p>使用三个(`)</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(&#96;&#96;&#96;)python &lt;!--实际使用中不需要括号&gt;</span><br><span class="line"># print Hello World!</span><br><span class="line">print(&quot;Hello, World!&quot;)</span><br><span class="line">(&#96;&#96;&#96;)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># print Hello World!</span></span><br><span class="line">print(<span class="string">"Hello, World!"</span>)</span><br></pre></td></tr></table></figure><h2 id="8-3-反引号转意"><a href="#8-3-反引号转意" class="headerlink" title="8.3 反引号转意"></a>8.3 反引号转意</h2><p>要表示带有<code>``的文本,将一对(``)</code>括在文本的外面<br>比如:<br><code>use `code` in your markdown file.</code></p><p>此处code带有一对反斜杠</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#96;&#96;use &#96;code&#96; in your markdown file.&#96;&#96;</span><br><span class="line">&lt;!-- 只需将两个&#96;&#96;括在文本外面 --&gt;</span><br></pre></td></tr></table></figure><p>效果如下:<br><code>use `code` in your markdown file.</code></p><!-- 只需将两个``括在文本外面 --><h1 id="9-横向分隔线"><a href="#9-横向分隔线" class="headerlink" title="9. 横向分隔线"></a>9. 横向分隔线</h1><figure class="highlight md"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="comment">&lt;!-- 三个或多个星号* --&gt;</span></span></span><br><span class="line"><span class="emphasis">***</span> </span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- 三个或多个短横- --&gt;</span></span></span><br><span class="line">---</span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- 三个或多个下划线_ --&gt;</span></span></span><br><span class="line"><span class="strong">_____</span><span class="strong">_____</span><span class="strong">_____</span><span class="strong">_____</span>__</span><br></pre></td></tr></table></figure><p>效果如下</p><hr><hr><hr><hr><h1 id="10-超链接"><a href="#10-超链接" class="headerlink" title="10. 超链接"></a>10. 超链接</h1><h2 id="10-1-贴个链接"><a href="#10-1-贴个链接" class="headerlink" title="10.1 贴个链接"></a>10.1 贴个链接</h2><p><code>[link text](url)</code></p><p>比如<br><code>My Favorite search engine is [Duck Duck Go](https://duckduckgo.com)</code></p><p>效果如下:<br>My Favorite search engine is <a href="https://duckduckgo.com" target="_blank" rel="noopener">Duck Duck Go</a></p><h2 id="10-2-快速链接"><a href="#10-2-快速链接" class="headerlink" title="10.2 快速链接"></a>10.2 快速链接</h2><p>使用<code>&lt;&gt;</code>将链接包围,不需要写描述文本了</p><p><code>&lt;https://www.markdownguide.org&gt;</code></p><p>效果如下:<br><a href="https://www.markdownguide.org" target="_blank" rel="noopener">https://www.markdownguide.org</a></p><h2 id="10-3-参考样式链接"><a href="#10-3-参考样式链接" class="headerlink" title="10.3 参考样式链接"></a>10.3 参考样式链接</h2><p>和引用论文差不多</p><p><code>[Link Text][number]</code><br><code>再写上[number]对应的链接 &lt;url&gt;</code></p><p>比如:    </p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!-- 第一部分 --&gt;</span><br><span class="line">[DuckDuckGo][1]</span><br><span class="line">[百度][2]</span><br><span class="line"></span><br><span class="line">&lt;!-- 第二部分 --&gt;</span><br><span class="line">[1]:&lt;https:&#x2F;&#x2F;duckduckgo.com&gt;</span><br><span class="line">[2]:http:&#x2F;&#x2F;www.baidu.com</span><br></pre></td></tr></table></figure><p>效果如下:</p><p><a href="https://duckduckgo.com" target="_blank" rel="noopener">DuckDuckGo</a>     </p><p><a href="http://www.baidu.com" target="_blank" rel="noopener">百度</a>    </p><blockquote><p>You can place this second part of the link anywhere in your Markdown document. Some people place them immediately after the paragraph in which they appear while other people place them at the end of the document (like endnotes or footnotes).<br>引用自<a href="https://www.markdownguide.org/basic-syntax/#horizontal-rules" target="_blank" rel="noopener">markdownguide.org</a></p></blockquote><p>这个参考式链接的第二部分可以出现在md文件的任何地方</p><hr><h1 id="11-插入图片"><a href="#11-插入图片" class="headerlink" title="11. 插入图片"></a>11. 插入图片</h1><p><code>![对图片的描述文字](url 给图片加个title(可选))</code></p><p>比如:<br>插一张我的头像</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">![myavatar](&#x2F;img&#x2F;avatar.jpeg &quot;杰尼龟🐛啊&quot;)</span><br></pre></td></tr></table></figure><p>效果如下:<br><img src= "/img/loading.gif" data-src="https://gitee.com/jzhmcoo1/jzhmcoo1picrepo/raw/master/img/avatar.jpeg" alt=""></p><hr><h1 id="12-写在最后"><a href="#12-写在最后" class="headerlink" title="12. 写在最后"></a>12. 写在最后</h1><p>第一次写博文. 👶👶👶<br>写这篇博是想学习Basic Syntax, 在博客中常用的md语法.<br>总结的不是很全面, 加入了自己的理解, 与官方文档有所偏差.<br>以后有需要的话可能会再出一篇Extended Synatx(官方说法)<br>hexo和我的vscode预览的效果有些差异, 没有时间去一个个解决,有点遗憾.<br>如果这篇文章能够帮助到你那就再好不过了.</p>]]></content>
      
      
      <categories>
          
          <category> StudyNotes </category>
          
          <category> Syntax </category>
          
      </categories>
      
      
        <tags>
            
            <tag> syntax </tag>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
